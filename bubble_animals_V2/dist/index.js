/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/core/tool.js":
/*!**************************!*\
  !*** ./src/core/tool.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Quad\": () => (/* binding */ Quad),\n/* harmony export */   \"randomInt\": () => (/* binding */ randomInt),\n/* harmony export */   \"convertRGB\": () => (/* binding */ convertRGB),\n/* harmony export */   \"convertRGBA\": () => (/* binding */ convertRGBA),\n/* harmony export */   \"getRandomColor\": () => (/* binding */ getRandomColor),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"whiten\": () => (/* binding */ whiten),\n/* harmony export */   \"coordToPos\": () => (/* binding */ coordToPos),\n/* harmony export */   \"isRCValid\": () => (/* binding */ isRCValid),\n/* harmony export */   \"isRCValidFourDirs\": () => (/* binding */ isRCValidFourDirs),\n/* harmony export */   \"isInButton\": () => (/* binding */ isInButton),\n/* harmony export */   \"drawText\": () => (/* binding */ drawText),\n/* harmony export */   \"drawScore\": () => (/* binding */ drawScore),\n/* harmony export */   \"drawTitle\": () => (/* binding */ drawTitle),\n/* harmony export */   \"Button\": () => (/* binding */ Button),\n/* harmony export */   \"ImgButton\": () => (/* binding */ ImgButton),\n/* harmony export */   \"Explosion\": () => (/* binding */ Explosion),\n/* harmony export */   \"Camera\": () => (/* binding */ Camera),\n/* harmony export */   \"Bezier\": () => (/* binding */ Bezier),\n/* harmony export */   \"Scoring\": () => (/* binding */ Scoring),\n/* harmony export */   \"renderQuad\": () => (/* binding */ renderQuad),\n/* harmony export */   \"Ball\": () => (/* binding */ Ball),\n/* harmony export */   \"RowBalls\": () => (/* binding */ RowBalls),\n/* harmony export */   \"VirtualScreen\": () => (/* binding */ VirtualScreen),\n/* harmony export */   \"distPoints\": () => (/* binding */ distPoints),\n/* harmony export */   \"collide\": () => (/* binding */ collide),\n/* harmony export */   \"debugConsole\": () => (/* binding */ debugConsole)\n/* harmony export */ });\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Quad = function Quad(x, y, w, h) {\n  _classCallCheck(this, Quad);\n\n  this.x = x;\n  this.y = y;\n  this.w = w - 0.1; //Pour Ã©viter le \"edge bleeding\"\n\n  this.h = h - 0.1;\n};\n\nvar getLetterQuads = function getLetterQuads(tsW, tsH, w, h) {\n  var quads = {};\n\n  for (var i = 0; i <= 9; i++) {\n    var quad = new Quad(i * tsW, tsH, w, h);\n    quads[i.toString()] = quad;\n  }\n\n  quads[\" \"] = new Quad(0, 0, w, h);\n  quads[\":\"] = new Quad(10 * tsW, tsH, w, h);\n  var alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n  for (var _i = 0; _i < 26; _i++) {\n    var _quad = void 0;\n\n    if (_i < 15) {\n      _quad = new Quad((_i + 1) * tsW, 2 * tsH, w, h);\n    } else if (_i < 26) {\n      _quad = new Quad((_i - 15) * tsW, 3 * tsH, w, h);\n    }\n\n    quads[alphabets[_i]] = _quad;\n  }\n\n  return quads;\n};\n\nvar letterQuads = getLetterQuads(12, 13, 12, 13);\nvar letterQuads_blue = getLetterQuads(14, 18, 14, 16);\nvar randomInt = function randomInt(nb) {\n  return Math.floor(Math.random() * nb);\n};\nvar convertRGB = function convertRGB(colorArray) {\n  var res = \"rgb(+\" + colorArray[0] + \", \" + colorArray[1] + \", \" + colorArray[2] + \")\";\n  return res;\n};\nvar convertRGBA = function convertRGBA(colorArray) {\n  return \"rgba(\".concat(colorArray[0], \", \").concat(colorArray[1], \", \").concat(colorArray[2], \", \").concat(colorArray[3], \")\");\n};\nvar getRandomColor = function getRandomColor() {\n  var lst = [Math.random() * 255, Math.random() * 255, Math.random() * 255, 1];\n  return lst;\n};\nvar lerp = function lerp(a, b, t) {\n  return (1 - t) * a + t * b;\n};\nvar whiten = function whiten(color, t) {\n  return [lerp(color[0], 255, t), lerp(color[1], 255, t), lerp(color[2], 255, t), color[3]];\n};\nvar coordToPos = function coordToPos(x, y, csW, csH) {\n  var r = Math.floor(y / csH);\n  var c = Math.floor(x / csW);\n  return {\n    r: r,\n    c: c\n  };\n};\nvar isRCValid = function isRCValid(r, c, nbRows, nbCols) {\n  if (r >= 0 && r < nbRows && c >= 0 && c < nbCols) {\n    return true;\n  }\n\n  return false;\n};\nvar isRCValidFourDirs = function isRCValidFourDirs(r, c, r0, c0) {\n  if (r === r0 - 1 && c === c0 || r === r0 + 1 && c === c0 || r === r0 && c === c0 || r === r0 && c === c0 - 1 || r === r0 && c === c0 + 1) {\n    return true;\n  }\n\n  return false;\n};\nvar isInButton = function isInButton(x, y, button) {\n  if (x >= button.x && x <= button.x + button.w && y >= button.y && y <= button.y + button.h) {\n    return true;\n  }\n\n  return false;\n};\nvar drawText = function drawText(ctx, text, align, color, font, x, y, w, h) {\n  ctx.font = font;\n  ctx.fillStyle = convertRGB(color);\n  var textW = ctx.measureText(text).width;\n  var textH = ctx.measureText(\"M\").width;\n  var x0 = x;\n  var y0 = y + (h + textH) / 2;\n\n  if (align === \"CENTER\") {\n    x0 = x + (w - textW) / 2;\n  }\n\n  ctx.fillText(text, x0, y0);\n};\nvar drawScore = function drawScore(ctx, imgFont, totalScore, startX, startY, endX, endY, scale) {\n  var gapAfterScore = 10;\n  var scoreText = \"SCORE\";\n  var quad = letterQuads_blue[\"A\"];\n  var maxWidth = (scoreText.length + 12) * quad.w * scale + gapAfterScore;\n\n  if (maxWidth > endX - startX) {\n    scale = (endX - startX - gapAfterScore) / ((scoreText.length + 12) * quad.w);\n  }\n\n  var x = startX;\n  var y = startY;\n  totalScore = totalScore.toString();\n\n  for (var i = 0; i < scoreText.length; i++) {\n    var _quad2 = letterQuads_blue[scoreText[i]];\n\n    if (i !== 0) {\n      x += _quad2.w * scale;\n    }\n\n    y = Math.floor((startY + endY) / 2 - _quad2.h * scale / 2);\n    ctx.drawImage(imgFont, _quad2.x, _quad2.y, _quad2.w, _quad2.h, x, y, _quad2.w * scale, _quad2.h * scale);\n  }\n\n  x += gapAfterScore;\n\n  for (var _i2 = 0; _i2 < totalScore.length; _i2++) {\n    var _quad3 = letterQuads_blue[totalScore[_i2]];\n    x += _quad3.w * scale;\n    y = Math.floor((startY + endY) / 2 - _quad3.h * scale / 2);\n    ctx.drawImage(imgFont, _quad3.x, _quad3.y, _quad3.w, _quad3.h, x, y, _quad3.w * scale, _quad3.h * scale);\n  }\n\n  return scale;\n};\nvar drawTitle = function drawTitle(ctx, text, imgFont, startX, startY, endX, endY, scale) {\n  var nbLetters = text.length;\n  var quad = letterQuads[\"A\"];\n  var gap = quad.w / 5;\n  var maxWidth = (nbLetters * (gap + quad.w) - gap) * scale;\n\n  if (maxWidth > (endX - startX) * 0.8) {\n    scale = (endX - startX) * 0.8 / (nbLetters * (gap + quad.w) - gap);\n    maxWidth = (nbLetters * (gap + quad.w) - gap) * scale;\n  }\n\n  var x = (startX + endX) / 2;\n  var y = (startY + endY) / 2;\n\n  for (var i = 0; i < nbLetters; i++) {\n    var _quad4 = letterQuads[text[i]];\n    var dx = x - maxWidth / 2 + i * (gap + _quad4.w) * scale;\n    var dy = y - _quad4.h * scale / 2;\n    ctx.drawImage(imgFont, _quad4.x, _quad4.y, _quad4.w, _quad4.h, dx, dy, Math.floor(_quad4.w * scale) + 1, Math.floor(_quad4.h * scale) + 1);\n  }\n\n  return scale;\n}; // export class Sprite{\n//     constructor(x, y, id, status, vy, targetY, bombTime){\n//         this.x = x;\n//         this.y = y; \n//         this.id = id;\n//         this.status = status; \n//         this.vx = 0;\n//         this.vy = vy;\n//         this.targetX = this.x;\n//         this.targetY = targetY;\n//         this.animationSpeed = 1; \n//         this.animationTimer = this.animationSpeed - Math.random();\n//         this.frameIndex = 0; \n//         this.quads = []; \n//         this.bomb = false; \n//         this.bombMaxTime = bombTime; \n//         this.bombTimer = bombTime;\n//         this.checked = false; \n//     }\n// }\n\nvar Button = /*#__PURE__*/function () {\n  function Button(img, text, x, y, w, h, scale, bgColor) {\n    _classCallCheck(this, Button);\n\n    this.img = img;\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.scale = scale;\n    this.bgColor = bgColor;\n  }\n\n  _createClass(Button, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.fillStyle = convertRGBA(this.bgColor);\n      ctx.fillRect(this.x, this.y, this.w, this.h);\n      drawTitle(ctx, this.text, this.img, this.x, this.y + 20 * Math.sin(Date.now() / 200), this.x + this.w, this.y + this.h, this.scale);\n    }\n  }]);\n\n  return Button;\n}();\nvar ImgButton = /*#__PURE__*/function () {\n  function ImgButton(img, x, y, scale) {\n    _classCallCheck(this, ImgButton);\n\n    this.img = img;\n    this.x = x;\n    this.y = y;\n    this.w = img.width * scale;\n    this.h = img.height * scale;\n    this.scale = scale;\n  }\n\n  _createClass(ImgButton, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n    }\n  }]);\n\n  return ImgButton;\n}();\nvar Explosion = function Explosion(maxLife, x0, y0, dirX, dirY, path, nbParticles) {\n  _classCallCheck(this, Explosion);\n\n  this.maxLife = maxLife;\n  this.life = maxLife;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.dirX = dirX;\n  this.dirY = dirY;\n  this.path = path;\n  this.nbParticles = nbParticles;\n};\nvar Camera = /*#__PURE__*/function () {\n  function Camera() {\n    _classCallCheck(this, Camera);\n\n    this.x = 0;\n    this.y = 0;\n  }\n\n  _createClass(Camera, [{\n    key: \"update\",\n    value: function update() {\n      this.x *= -0.7;\n      this.y *= -0.7;\n\n      if (Math.abs(this.x) < 0.01) {\n        this.x = 0;\n      }\n\n      if (Math.abs(this.y) < 0.01) {\n        this.y = 0;\n      }\n    }\n  }, {\n    key: \"shake\",\n    value: function shake() {\n      this.x = 7;\n      this.y = 4;\n    }\n  }]);\n\n  return Camera;\n}();\nvar Bezier = /*#__PURE__*/function () {\n  function Bezier(x0, y0, x1, y1, x2, y2) {\n    _classCallCheck(this, Bezier);\n\n    this.xstart = x0;\n    this.ystart = y0;\n    this.xmid = x1;\n    this.ymid = y1;\n    this.xend = x2;\n    this.yend = y2;\n  }\n\n  _createClass(Bezier, [{\n    key: \"getX\",\n    value: function getX(t) {\n      return lerp(lerp(this.xstart, this.xmid, t), lerp(this.xmid, this.xend, t), t);\n    }\n  }, {\n    key: \"getY\",\n    value: function getY(t) {\n      return lerp(lerp(this.ystart, this.ymid, t), lerp(this.ymid, this.yend, t), t);\n    }\n  }]);\n\n  return Bezier;\n}(); // export class Scoring {\n//     constructor(score, maxLife, path){\n//         this.score = score;\n//         this.maxLife = maxLife;\n//         this.life = maxLife; \n//         this.path = path; \n//     }\n// }\n\nvar Scoring = function Scoring(x, y, score) {\n  _classCallCheck(this, Scoring);\n\n  this.x = x;\n  this.y = y;\n  this.score = score;\n};\nvar renderQuad = function renderQuad(r, c, w, h, gap) {\n  var quad = {};\n  quad.x = c * 21 + gap;\n  quad.y = r * h;\n  quad.w = w;\n  quad.h = h;\n  return quad;\n};\nvar Ball = /*#__PURE__*/function () {\n  function Ball(id, x, y, r, active) {\n    _classCallCheck(this, Ball);\n\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.r = r;\n    this.vx = 0;\n    this.vy = 0;\n    this.score = 0;\n    this.status = \"idle\";\n    this.active = active;\n    this.notFallingChecked = false;\n    this.checked = false;\n    this.frameIndex = 0;\n    this.animationSpeed = 0.3;\n    this.animationTimer = this.animationSpeed * (1 - Math.random());\n    this.quads = [];\n    var gap = 3;\n    this.quads.push(renderQuad(0, 0, 16, 16, gap));\n    this.quads.push(renderQuad(0, 2, 16, 16, gap));\n    this.bubbleQuad = new Quad(70, 70, 372, 372);\n    this.bubbleFrameIndex = 0;\n    this.bubbleAnimationSpeed = 0.08;\n    this.bubbleAnimationTimer = this.bubbleAnimationSpeed;\n  }\n\n  _createClass(Ball, [{\n    key: \"draw\",\n    value: function draw(ctx, imgA, imgB, color) {\n      var quad = this.quads[this.frameIndex];\n\n      if (this.bubbleFrameIndex === 0) {\n        ctx.beginPath();\n        ctx.fillStyle = convertRGBA(color);\n        ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n\n      if (imgA) {\n        ctx.drawImage(imgA, quad.x, quad.y, quad.w, quad.h, this.x - this.r / 2, this.y - this.r / 2, this.r, this.r);\n      }\n\n      if (this.bubbleFrameIndex === 0) {\n        ctx.drawImage(imgB, this.x - this.r, this.y - this.r, 2 * this.r, 2 * this.r);\n      } else {\n        ctx.drawImage(imgB, this.bubbleQuad.x, this.bubbleQuad.y, this.bubbleQuad.w, this.bubbleQuad.h, this.x - this.r, this.y - this.r, 2 * this.r, 2 * this.r);\n      }\n\n      if (!this.active) {\n        ctx.beginPath();\n        ctx.fillStyle = convertRGBA([200, 200, 200, 0.7]);\n        ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    }\n  }]);\n\n  return Ball;\n}();\nvar RowBalls = /*#__PURE__*/function () {\n  function RowBalls(y, indent) {\n    _classCallCheck(this, RowBalls);\n\n    this.y = y;\n    this.indent = indent;\n    this.balls = [];\n  }\n\n  _createClass(RowBalls, [{\n    key: \"addBall\",\n    value: function addBall(ball) {\n      this.balls.push(ball);\n    }\n  }, {\n    key: \"removeBall\",\n    value: function removeBall(ball) {\n      this.balls.splice(this.balls.indexOf(ball), 1);\n    }\n  }]);\n\n  return RowBalls;\n}();\nvar VirtualScreen = /*#__PURE__*/function () {\n  function VirtualScreen(ctx, vW, vH, dW, dH) {\n    _classCallCheck(this, VirtualScreen);\n\n    this.ctx = ctx;\n    this.vW = vW;\n    this.vH = vH;\n    this.dW = dW;\n    this.dH = dH;\n    this.xoffset = 0;\n    this.yoffset = 0;\n    this.xScale = 1;\n    this.yScale = 1;\n    this.mouseClick = false;\n    this.mouseX = 0;\n    this.mouseY = 0;\n  }\n\n  _createClass(VirtualScreen, [{\n    key: \"setStrategy\",\n    value: function setStrategy() {\n      if (this.dH / this.dW > this.vH / this.vW) {\n        this.xScale = this.dW / this.vW;\n        this.yScale = this.xScale;\n        this.yoffset = (this.dH - this.yScale * this.vH) / 2;\n      } else {\n        this.yScale = this.dH / this.vH;\n        this.xScale = this.yScale;\n        this.xoffset = (this.dW - this.xScale * this.vW) / 2;\n      }\n    }\n  }, {\n    key: \"transform\",\n    value: function transform() {\n      this.ctx.translate(this.xoffset, this.yoffset);\n      this.ctx.scale(this.xScale, this.yScale);\n    }\n  }]);\n\n  return VirtualScreen;\n}();\nvar distPoints = function distPoints(x1, y1, x2, y2) {\n  return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\nvar collide = function collide(b1, b2) {\n  var dist = distPoints(b1.x, b1.y, b2.x, b2.y);\n\n  if (dist <= (b1.r + b2.r) * (b1.r + b2.r)) {\n    return true;\n  }\n\n  return false;\n};\nvar debugConsole = function debugConsole(text) {//console.log(text); \n};\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/core/tool.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main/main */ \"./src/main/main.js\");\n // var AAA=16807\n// var MMM=2**31-1\n// var XXX=1\n// const ff=function(){\n//     XXX=(AAA*XXX)%MMM\n//     return XXX/MMM\n// }\n// Math[\"random\"]=ff; \n// Math[\"reseed\"]=function(s){XXX=s;}\n\nif (window.cordova) {\n  document.addEventListener(\"deviceready\", function () {\n    navigator.splashscreen.hide();\n    screen.orientation.lock('portrait');\n    var main = new _main_main__WEBPACK_IMPORTED_MODULE_0__.Main();\n    main.start();\n  });\n} else {\n  var main = new _main_main__WEBPACK_IMPORTED_MODULE_0__.Main();\n  main.start();\n}\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/index.js?");

/***/ }),

/***/ "./src/main/fadeEnd.js":
/*!*****************************!*\
  !*** ./src/main/fadeEnd.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FadeEnd\": () => (/* binding */ FadeEnd)\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/main/game.js\");\n/* harmony import */ var _gameover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameover */ \"./src/main/gameover.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar distW = 48;\nvar distH = 48;\nvar sizeW = 0;\nvar sizeH = 0;\nvar rects, t, fadeState;\n\nvar Rect = function Rect(x, y, w, h) {\n  _classCallCheck(this, Rect);\n\n  this.centerX = x;\n  this.centerY = y;\n  this.w = w;\n  this.h = h;\n};\n\nvar FadeEnd = /*#__PURE__*/function () {\n  function FadeEnd(globals, toScene, score) {\n    _classCallCheck(this, FadeEnd);\n\n    this.globals = globals;\n    this.vScreen = globals.vScreen;\n    this.ctx = globals.ctx;\n    this.toScene = toScene;\n    this.score = score;\n    this.name = \"fadeEnd\";\n  }\n\n  _createClass(FadeEnd, [{\n    key: \"init\",\n    value: function init() {\n      rects = [];\n      fadeState = \"out\";\n      t = 0;\n\n      for (var x = 0; x < this.vScreen.dW + distW; x += distW) {\n        for (var y = 0; y < this.vScreen.dH + distH; y += distH) {\n          rects.push(new Rect(x, y, sizeW, sizeH));\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (fadeState === \"out\") {\n        t += 3 * dt;\n\n        if (t >= 1) {\n          t = 1;\n          fadeState = \"in\";\n          var newScene;\n\n          if (this.toScene === \"game\") {\n            newScene = new _game__WEBPACK_IMPORTED_MODULE_0__.Game(this.globals);\n          } else if (this.toScene === \"gameover\") {\n            newScene = new _gameover__WEBPACK_IMPORTED_MODULE_1__.Gameover(this.globals, this.score);\n          }\n\n          newScene.init();\n          this.globals.scenes.splice(this.globals.scenes.length - 2, 1, newScene);\n        }\n      } else if (fadeState === \"in\") {\n        t -= 3 * dt;\n\n        if (t <= 0) {\n          t = 0;\n          this.globals.scenes.splice(this.globals.scenes.length - 1, 1);\n\n          if (this.toScene === \"game\") {\n            this.globals.assets.bgMusic.play();\n          } else if (this.toScene === \"gameover\") {//this.globals.assets.endMusic.play();\n          }\n        }\n      }\n\n      for (var i = 0; i < rects.length; i++) {\n        var rect = rects[i];\n        rect.sizeW = distW * t;\n        rect.sizeH = distH * t;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.save();\n      this.vScreen.transform();\n\n      for (var i = 0; i < rects.length; i++) {\n        var rect = rects[i];\n        this.ctx.fillStyle = \"rgb(0, 0, 0)\";\n        this.ctx.fillRect(rect.centerX - rect.sizeW / 2, rect.centerY - rect.sizeH / 2, rect.sizeW, rect.sizeH);\n      }\n\n      this.ctx.restore();\n    }\n  }]);\n\n  return FadeEnd;\n}();\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/main/fadeEnd.js?");

/***/ }),

/***/ "./src/main/fadeStart.js":
/*!*******************************!*\
  !*** ./src/main/fadeStart.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FadeStart\": () => (/* binding */ FadeStart)\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/main/game.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\nvar radius = 45;\nvar dist = 64;\nvar circles, t, fadeState;\n\nvar Circle = function Circle(x, y, r) {\n  _classCallCheck(this, Circle);\n\n  this.x = x;\n  this.y = y;\n  this.r = r;\n};\n\nvar FadeStart = /*#__PURE__*/function () {\n  function FadeStart(globals) {\n    _classCallCheck(this, FadeStart);\n\n    this.globals = globals;\n    this.vScreen = globals.vScreen;\n    this.ctx = globals.ctx;\n    this.name = \"fadeStart\";\n  }\n\n  _createClass(FadeStart, [{\n    key: \"init\",\n    value: function init() {\n      circles = [];\n      t = 0;\n      fadeState = \"out\";\n\n      for (var x = 0; x < this.vScreen.vW + radius; x += dist) {\n        for (var y = 0; y < this.vScreen.vH + radius; y += dist) {\n          var c = new Circle(x, y, 0);\n          circles.push(c);\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (fadeState === \"out\") {\n        t += 3 * dt;\n\n        if (t >= 1) {\n          t = 1;\n          fadeState = \"in\";\n          var game = new _game__WEBPACK_IMPORTED_MODULE_0__.Game(this.globals);\n          game.init();\n          this.globals.scenes.splice(this.globals.scenes.length - 2, 1, game);\n        }\n      } else if (fadeState === \"in\") {\n        t -= 3 * dt;\n\n        if (t <= 0) {\n          t = 0;\n          this.globals.scenes.splice(this.globals.scenes.length - 1, 1);\n          this.globals.assets.bgMusic.play();\n        }\n      }\n\n      for (var i = 0; i < circles.length; i++) {\n        var circle = circles[i];\n        circle.r = radius * t;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.save();\n      this.vScreen.transform();\n\n      for (var i = 0; i < circles.length; i++) {\n        var circle = circles[i];\n        this.ctx.fillStyle = \"rgb(0, 0, 0)\";\n        this.ctx.beginPath();\n        this.ctx.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI);\n        this.ctx.fill();\n      }\n\n      this.ctx.restore();\n    }\n  }]);\n\n  return FadeStart;\n}();\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/main/fadeStart.js?");

/***/ }),

/***/ "./src/main/game.js":
/*!**************************!*\
  !*** ./src/main/game.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var _core_tool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/tool.js */ \"./src/core/tool.js\");\n/* harmony import */ var _fadeEnd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fadeEnd.js */ \"./src/main/fadeEnd.js\");\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./main.js */ \"./src/main/main.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar nbAnimalTypes = 3;\nvar fallSpeed = 500;\nvar velocity = 1200;\nvar maxTimeLaunch = 0.5;\nvar alpha = 0.7;\nvar maxGameSpeed = 10;\nvar maxNbSteps = 20;\nvar maxProbaHardBall = 0.05;\nvar minNbBubbles = 3; // const colors = [[0, 197, 255, alpha], [254, 186, 203, alpha], [131, 224, 76, alpha], [0, 0, 0, 1], [255, 50, 50, 1]];\n// const colors = [[0, 197, 255, alpha], [255, 50, 50, alpha], [131, 224, 76, alpha], [0, 0, 0, 1], [255, 255, 0, 1]];  \n\nvar colors = [[0, 197, 255, alpha], [255, 50, 50, alpha], [131, 224, 76, alpha], [0, 0, 0, 1]];\nvar currentState;\nvar countLines;\nvar totalScore;\nvar bubbles;\nvar waitingBubbles, launchBubble;\nvar fixX, fixY;\nvar countCollision = 0;\nvar collidedBubble;\nvar timerLaunch;\nvar yoffset;\nvar trajectory;\nvar gameTC;\nvar Game = /*#__PURE__*/function () {\n  function Game(globals) {\n    _classCallCheck(this, Game);\n\n    _defineProperty(this, \"f\", function (n) {\n      return Math.PI * (1 - 3 / (4 * Math.pow(n, 0.2))) * 180;\n    });\n\n    this.globals = globals;\n    this.vScreen = globals.vScreen;\n    this.ctx = globals.ctx;\n    this.name = \"game\";\n    this.radius = globals.config.radius;\n    this.nbRows = globals.config.nbRows;\n    this.nbCols = globals.config.nbCols;\n    this.gridH = globals.config.gridH;\n    this.scorePanelH = globals.config.scorePanelH, this.ceilH = globals.config.ceilH, this.groundH = globals.config.groundH, this.wallS = globals.config.wallS, this.thresholdH = globals.config.thresholdH, this.scaleTitle = globals.config.scaleTitle;\n  }\n\n  _createClass(Game, [{\n    key: \"init\",\n    value: function init() {\n      currentState = \"LAUNCH\";\n      countLines = 0;\n      totalScore = 0;\n      gameTC = this.getGameTempoConfig(1);\n      fixX = this.vScreen.vW / 2;\n      fixY = this.vScreen.vH - this.wallS - 5 * this.radius;\n      collidedBubble = null;\n      timerLaunch = maxTimeLaunch * Math.random();\n      yoffset = this.wallS + this.scorePanelH + this.ceilH;\n      this.initGame(3);\n      launchBubble = this.randomLaunchBubble((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY, this.radius);\n      waitingBubbles = [];\n      waitingBubbles[0] = this.randomLaunchBubble((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 2 * this.radius, this.radius);\n      waitingBubbles[1] = this.randomLaunchBubble((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 4 * this.radius, this.radius);\n      trajectory = [];\n      this.globals.assets.bgMusic.play();\n    }\n  }, {\n    key: \"needHardBall\",\n    value: function needHardBall() {\n      if (Math.random() < gameTC.probaHardBall) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getGameTempoConfig\",\n    value: function getGameTempoConfig(n) {\n      var tc = {\n        numStep: n,\n        nbSteps: n <= 20 ? maxNbSteps - n : 0,\n        speed: maxGameSpeed - 7 / Math.pow(n, 0.3),\n        probaHardBall: maxProbaHardBall / Math.pow(n, 0.3),\n        angleSpeed: Math.PI * (1 - 3 / (4 * Math.pow(n, 0.2)))\n      }; //console.table(tc);\n\n      return tc;\n    }\n  }, {\n    key: \"initGame\",\n    value: function initGame(nb) {\n      bubbles = [];\n\n      for (var i = 0; i < nb; i++) {\n        var indent = void 0;\n\n        if (i === 0) {\n          indent = false;\n        } else {\n          indent = !bubbles[i - 1].indent;\n        }\n\n        var y = yoffset + this.radius + this.radius * Math.sqrt(3) * i;\n        var row = new _core_tool_js__WEBPACK_IMPORTED_MODULE_0__.RowBalls(y, indent);\n\n        for (var j = 0; j < this.nbCols; j++) {\n          var ball = new _core_tool_js__WEBPACK_IMPORTED_MODULE_0__.Ball((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), this.wallS + (indent + 1) * this.radius + j * 2 * this.radius, y, this.radius, true); //if(Math.random()>0.8){\n\n          row.addBall(ball); //}\n        }\n\n        bubbles.push(row);\n      }\n\n      this.addBubbles();\n    }\n  }, {\n    key: \"randomLaunchBubble\",\n    value: function randomLaunchBubble(id, x, y, r) {\n      var ball = new _core_tool_js__WEBPACK_IMPORTED_MODULE_0__.Ball(id, x, y, r, true);\n      ball.launched = false;\n      ball.angle = -Math.PI / 2;\n      ball.dir = 1;\n\n      if (Math.random() > 0.5) {\n        ball.dir = -1;\n      }\n\n      return ball;\n    }\n  }, {\n    key: \"addBubbles\",\n    value: function addBubbles() {\n      var y = bubbles[0].y - Math.sqrt(3) * this.radius;\n      var indent = !bubbles[0].indent;\n      var row = new _core_tool_js__WEBPACK_IMPORTED_MODULE_0__.RowBalls(y, indent);\n\n      for (var j = 0; j < this.nbCols; j++) {\n        var ball = new _core_tool_js__WEBPACK_IMPORTED_MODULE_0__.Ball((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), this.wallS + (indent + 1) * this.radius + j * 2 * this.radius, y, this.radius, false);\n        row.addBall(ball);\n      }\n\n      bubbles.unshift(row);\n    }\n  }, {\n    key: \"simulateTrajectory\",\n    value: function simulateTrajectory() {\n      var dt = 1 / 60;\n\n      if (launchBubble) {\n        trajectory = [];\n        var x = launchBubble.x;\n        var y = launchBubble.y;\n        var vx = velocity * Math.cos(launchBubble.angle);\n        var vy = velocity * Math.sin(launchBubble.angle);\n\n        for (var i = 0; i < gameTC.nbSteps; i++) {\n          x = x + vx * dt;\n          y = y + vy * dt;\n\n          if (x <= this.wallS + this.radius) {\n            var diff = this.wallS + this.radius - x;\n            x += 2 * diff;\n            vx = -vx;\n          } else if (x >= this.vScreen.vW - this.wallS - this.radius) {\n            var _diff = this.vScreen.vW - this.wallS - this.radius - x;\n\n            x += 2 * _diff;\n            vx = -vx;\n          }\n\n          trajectory.push({\n            x: x,\n            y: y\n          });\n\n          if (this.interceptBubble(x, y)) {\n            break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"interceptBubble\",\n    value: function interceptBubble(x, y) {\n      for (var i = bubbles.length - 1; i >= 0; i--) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n\n          if ((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.distPoints)(x, y, ball.x, ball.y) <= 4 * this.radius * this.radius) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"launch\",\n    value: function launch() {\n      // const rect = this.globals.can.getBoundingClientRect(); \n      // if(this.globals.mouse.x >= rect.left + this.vScreen.xoffset && this.globals.mouse.x <= rect.right - this.vScreen.xoffset\n      //     && this.globals.mouse.y >= rect.top + this.vScreen.yoffset && this.globals.mouse.y <= rect.bottom - this.vScreen.yoffset){\n      //     if (launchBubble){\n      //         launchBubble.vx = velocity * Math.cos(launchBubble.angle);\n      //         launchBubble.vy = velocity * Math.sin(launchBubble.angle);\n      //         currentState = \"UPDATELAUNCHBUBBLE\";\n      //         launchBubble.launched = true;\n      //     }\n      // }\n      if (this.vScreen.mouseX >= 0 && this.vScreen.mouseX <= this.vScreen.vW && this.vScreen.mouseY >= 0 && this.vScreen.mouseY <= this.vScreen.vH) {\n        if (launchBubble) {\n          launchBubble.vx = velocity * Math.cos(launchBubble.angle);\n          launchBubble.vy = velocity * Math.sin(launchBubble.angle);\n          currentState = \"UPDATELAUNCHBUBBLE\";\n          launchBubble.launched = true;\n        }\n      }\n    }\n  }, {\n    key: \"automaticLaunch\",\n    value: function automaticLaunch() {\n      if (launchBubble) {\n        launchBubble.vx = velocity * Math.cos(launchBubble.angle);\n        launchBubble.vy = velocity * Math.sin(launchBubble.angle);\n        currentState = \"UPDATELAUNCHBUBBLE\";\n        launchBubble.launched = true;\n      }\n    }\n  }, {\n    key: \"updateBubbles\",\n    value: function updateBubbles(dt) {\n      for (var i = bubbles.length - 1; i >= 0; i--) {\n        var row = bubbles[i]; //if(currentState !== \"DISAPPEAR\" && currentState !== \"FALL\"){\n\n        row.y += gameTC.speed * dt; //}\n\n        var balls = bubbles[i].balls;\n\n        for (var j = balls.length - 1; j >= 0; j--) {\n          var ball = balls[j];\n          ball.animationTimer -= dt;\n\n          if (ball.animationTimer <= 0) {\n            ball.frameIndex++;\n            ball.animationTimer = ball.animationSpeed;\n\n            if (ball.frameIndex >= 2) {\n              ball.frameIndex = 0;\n            }\n          }\n\n          if (ball.status === \"disappear\") {\n            //if(ball.bubbleFrameIndex === 0){\n            ball.r *= 1.01; // }\n\n            ball.bubbleAnimationTimer -= dt;\n\n            if (ball.bubbleAnimationTimer <= 0) {\n              ball.bubbleAnimationTimer = ball.bubbleAnimationSpeed;\n              ball.bubbleFrameIndex++;\n\n              if (ball.bubbleFrameIndex >= this.globals.assets.imgBubbles.length) {\n                totalScore += ball.score;\n                balls.splice(j, 1);\n              }\n            }\n          }\n\n          if (ball.status === \"fall\") {\n            ball.y += ball.vy * dt;\n\n            if (ball.y >= fixY) {\n              totalScore += ball.score;\n\n              if (ball.id < 3) {\n                ball.y = fixY;\n                ball.vy = 0;\n                ball.status = \"disappear\";\n                this.globals.assets.pickupSound.play();\n              } //balls.splice(j, 1);\n\n            }\n          } else {\n            if (ball.y < fixY) {\n              if (row.y - ball.y >= Math.sqrt(3) * this.radius - 0.1) {\n                (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"problem\"); //this.draw();\n\n                throw new Error(\"Error!\");\n              }\n\n              ball.y = row.y;\n\n              if (!ball.active && ball.y >= yoffset + this.radius) {\n                ball.active = true;\n              }\n            }\n          }\n        }\n\n        this.removeBubblesRow(i);\n\n        if (row.y + this.radius >= yoffset + this.gridH) {\n          currentState = \"GAMEOVER\";\n          this.globals.assets.bgMusic.pause();\n          this.globals.assets.deadSound.play();\n          var fade = new _fadeEnd_js__WEBPACK_IMPORTED_MODULE_1__.FadeEnd(this.globals, \"gameover\", totalScore);\n          (0,_main_js__WEBPACK_IMPORTED_MODULE_2__.enter)(fade);\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (currentState !== \"GAMEOVER\") {\n        if (bubbles[0].y >= yoffset + this.radius - this.radius * Math.sqrt(3)) {\n          this.addBubbles();\n          countLines++;\n\n          if (countLines % (5 * gameTC.numStep) === 0) {\n            gameTC = this.getGameTempoConfig(gameTC.numStep + 1);\n          }\n        }\n\n        var anyDisappearBubbles = this.anyStatusBubbles(\"disappear\");\n        var anyFallBubbles = this.anyStatusBubbles(\"fall\");\n        this.updateBubbles(dt);\n\n        if (currentState === \"LAUNCH\") {\n          if (this.vScreen.mouseClick) {\n            this.vScreen.mouseClick = false;\n            this.launch();\n          } // timerLaunch -= dt; \n          // if(timerLaunch <= 0){\n          //     this.automaticLaunch();\n          //     timerLaunch = maxTimeLaunch * Math.random();\n          // }\n\n\n          this.updateLaunchDirection(dt);\n        } else if (currentState === \"UPDATELAUNCHBUBBLE\") {\n          if (launchBubble) {\n            this.updateLaunchBubble(dt);\n          } else {\n            if (!anyDisappearBubbles && !anyFallBubbles) {\n              this.initLaunchStage();\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"countCheckedBubbles\",\n    value: function countCheckedBubbles() {\n      var count = 0;\n\n      for (var i = 0; i < bubbles.length; i++) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n\n          if (ball.checked) {\n            count++;\n          }\n        }\n      }\n\n      return count;\n    }\n  }, {\n    key: \"anyStatusBubbles\",\n    value: function anyStatusBubbles(status) {\n      for (var i = 0; i < bubbles.length; i++) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n\n          if (ball.status === status) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"anyFallingBall\",\n    value: function anyFallingBall() {\n      for (var i = bubbles.length - 1; i >= 0; i--) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n\n          if (ball.vy > 0) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"initCheckedBubbles\",\n    value: function initCheckedBubbles() {\n      for (var i = 0; i < bubbles.length; i++) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n          ball.checked = false;\n        }\n      }\n    }\n  }, {\n    key: \"initNotFallingCheckedBubbles\",\n    value: function initNotFallingCheckedBubbles() {\n      for (var i = 0; i < bubbles.length; i++) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n          ball.notFallingChecked = false;\n        }\n      }\n    }\n  }, {\n    key: \"floodFill\",\n    value: function floodFill(bubble, numRow) {\n      if (bubble === -1) return;\n      if (!bubble.active) return;\n      if (bubble.id !== launchBubble.id) return;\n      if (bubble.checked) return;\n      bubble.checked = true;\n      var res = this.sixNeighbor(bubble, numRow);\n      var sixObjets = res.objets;\n\n      for (var i = 0; i < sixObjets.length; i++) {\n        var r = numRow + Math.floor(i / 2) - 1;\n        this.floodFill(sixObjets[i], r);\n      }\n    }\n  }, {\n    key: \"floodFillNotFalling\",\n    value: function floodFillNotFalling(bubble, numRow) {\n      if (bubble === -1) return;\n      if (bubble.status !== \"idle\") return;\n      if (bubble.notFallingChecked) return;\n      bubble.notFallingChecked = true;\n      var res = this.sixNeighbor(bubble, numRow);\n      var sixObjets = res.objets;\n\n      for (var i = 0; i < sixObjets.length; i++) {\n        var r = numRow + Math.floor(i / 2) - 1;\n        this.floodFillNotFalling(sixObjets[i], r);\n      }\n    }\n  }, {\n    key: \"findFallBubbles\",\n    value: function findFallBubbles() {\n      this.initNotFallingCheckedBubbles();\n      var balls = bubbles[1].balls;\n\n      for (var j = 0; j < balls.length; j++) {\n        var ball = balls[j];\n        this.floodFillNotFalling(ball, 1);\n      }\n\n      for (var i = 0; i < bubbles.length; i++) {\n        var _balls = bubbles[i].balls;\n\n        for (var _j = 0; _j < _balls.length; _j++) {\n          var _ball = _balls[_j];\n\n          if (!_ball.notFallingChecked && _ball.status !== \"disappear\") {\n            _ball.status = \"fall\";\n            _ball.vy = fallSpeed;\n            _ball.score = 20;\n          }\n        }\n      }\n\n      this.initNotFallingCheckedBubbles();\n    }\n  }, {\n    key: \"updateLaunchDirection\",\n    value: function updateLaunchDirection(dt) {\n      launchBubble.angle += launchBubble.dir * gameTC.angleSpeed * dt;\n\n      if (launchBubble.angle > -20 / 180 * Math.PI) {\n        launchBubble.angle = -20 / 180 * Math.PI;\n        launchBubble.dir = -1;\n      } else if (launchBubble.angle < -160 / 180 * Math.PI) {\n        launchBubble.angle = -160 / 180 * Math.PI;\n        launchBubble.dir = 1;\n      }\n\n      launchBubble.animationTimer -= dt;\n\n      if (launchBubble.animationTimer <= 0) {\n        launchBubble.frameIndex++;\n        launchBubble.animationTimer = launchBubble.animationSpeed;\n\n        if (launchBubble.frameIndex >= 2) {\n          launchBubble.frameIndex = 0;\n        }\n      }\n\n      this.simulateTrajectory();\n    }\n  }, {\n    key: \"initLaunchStage\",\n    value: function initLaunchStage() {\n      //collidedBubble = null;\n      this.initCheckedBubbles();\n      currentState = \"LAUNCH\";\n      launchBubble = waitingBubbles[0];\n      launchBubble.y -= 2 * this.radius;\n      launchBubble.launched = false;\n      waitingBubbles[0] = waitingBubbles[1];\n      waitingBubbles[0].y -= 2 * this.radius;\n      waitingBubbles[1] = this.randomLaunchBubble(this.needHardBall() ? 3 : (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 4 * this.radius, this.radius);\n    }\n  }, {\n    key: \"updateLaunchBubble\",\n    value: function updateLaunchBubble(dt) {\n      if (launchBubble.status !== \"disappear\") {\n        launchBubble.x += launchBubble.vx * dt;\n        launchBubble.y += launchBubble.vy * dt;\n\n        if (launchBubble.x <= this.wallS + this.radius) {\n          this.globals.assets.hit1Sound.play();\n          var diff = this.wallS + this.radius - launchBubble.x;\n          launchBubble.x += 2 * diff;\n          launchBubble.vx = -launchBubble.vx;\n        } else if (launchBubble.x >= this.vScreen.vW - this.wallS - this.radius) {\n          this.globals.assets.hit1Sound.play();\n\n          var _diff2 = this.vScreen.vW - this.wallS - this.radius - launchBubble.x;\n\n          launchBubble.x += 2 * _diff2;\n          launchBubble.vx = -launchBubble.vx;\n        }\n\n        if (launchBubble.launched && launchBubble.y >= fixY) {\n          this.globals.assets.hit1Sound.play();\n          launchBubble.y = fixY;\n          launchBubble.vy = 0;\n          launchBubble.status = \"disappear\";\n        }\n      } else {\n        launchBubble.bubbleAnimationTimer -= dt;\n\n        if (launchBubble.bubbleAnimationTimer <= 0) {\n          launchBubble.bubbleAnimationTimer = launchBubble.bubbleAnimationSpeed;\n          launchBubble.bubbleFrameIndex++;\n\n          if (launchBubble.bubbleFrameIndex >= this.globals.assets.imgBubbles.length) {\n            launchBubble = null;\n          }\n        }\n      }\n\n      if (launchBubble) {\n        this.detectCollideBubble();\n      }\n    }\n  }, {\n    key: \"detectCollideBubble\",\n    value: function detectCollideBubble() {\n      external_loop: for (var i = bubbles.length - 1; i >= 0; i--) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n\n          if (launchBubble.id === 3) {\n            if ((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.collide)(launchBubble, ball)) {\n              if (ball.active) {\n                this.globals.assets.explodeSound.play();\n                ball.checked = true;\n                ball.status = \"disappear\";\n                ball.score = 10;\n              } else {\n                this.globals.assets.hit1Sound.play();\n                launchBubble.vx = 0;\n                launchBubble.vy = fallSpeed;\n                break external_loop;\n              }\n            }\n          } else {\n            if ((0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.collide)(launchBubble, ball)) {\n              collidedBubble = ball;\n              countCollision++;\n              launchBubble.vx = 0;\n              launchBubble.vy = 0;\n              (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"Collision number: \".concat(countCollision));\n              (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"Collision in row:  \".concat(i));\n              (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"Collided bubble coordinates: \".concat(ball.x, \", \").concat(ball.y));\n              this.nearestNeighbor(ball, i);\n\n              var _countCB = this.countCheckedBubbles();\n\n              if (_countCB >= minNbBubbles) {\n                this.globals.assets.pickupSound.play(); //this.globals.assets.hit2Sound.play();\n\n                this.disappearBubbles();\n              } else {\n                this.globals.assets.hit1Sound.play();\n              }\n\n              break external_loop;\n            }\n          }\n        }\n      }\n\n      var countCB = this.countCheckedBubbles();\n\n      if (countCB > 0 || launchBubble.id < nbAnimalTypes && countCB >= minNbBubbles) {\n        //console.log(\"find falling bubbles\", countCollision);\n        this.initCheckedBubbles();\n        this.findFallBubbles();\n      }\n    }\n  }, {\n    key: \"sixNeighbor\",\n    value: function sixNeighbor(bubble, numRow) {\n      var x = bubble.x;\n      var y = bubble.y;\n      var sixCoords = [[x - this.radius, y - this.radius * Math.sqrt(3)], [x + this.radius, y - this.radius * Math.sqrt(3)], [x - 2 * this.radius, y], [x + 2 * this.radius, y], [x - this.radius, y + this.radius * Math.sqrt(3)], [x + this.radius, y + this.radius * Math.sqrt(3)]];\n      var sixObjets = [-1, -1, -1, -1, -1, -1];\n\n      for (var _i = numRow - 1; _i <= numRow + 1; _i += 2) {\n        if (_i >= 0 && _i < bubbles.length) {\n          for (var j = 0; j < bubbles[_i].balls.length; j++) {\n            var ball = bubbles[_i].balls[j];\n\n            if (ball.x - x === -this.radius) {\n              sixObjets[(_i + (1 - numRow)) * 2] = ball;\n            } else if (ball.x - x === this.radius) {\n              sixObjets[(_i + (1 - numRow)) * 2 + 1] = ball;\n            }\n          }\n        }\n      }\n\n      var i = numRow;\n\n      if (i >= 0 && i < bubbles.length) {\n        for (var _j2 = 0; _j2 < bubbles[i].balls.length; _j2++) {\n          var _ball2 = bubbles[i].balls[_j2];\n\n          if (_ball2.x - x === -2 * this.radius) {\n            sixObjets[2] = _ball2;\n          } else if (_ball2.x - x === 2 * this.radius) {\n            sixObjets[3] = _ball2;\n          }\n        }\n      }\n\n      return {\n        coords: sixCoords,\n        objets: sixObjets\n      };\n    }\n  }, {\n    key: \"nearestNeighbor\",\n    value: function nearestNeighbor(bubble, numRow) {\n      var res = this.sixNeighbor(bubble, numRow);\n      var sixCoords = res.coords;\n      var sixObjets = res.objets;\n      var validPosition = {};\n\n      for (var i = 0; i < 6; i++) {\n        var coord = sixCoords[i];\n\n        if (sixObjets[i] === -1 && coord[0] >= this.radius && coord[0] <= this.vScreen.vW - this.radius) {\n          validPosition[i] = coord;\n        }\n      }\n\n      var dists = {};\n\n      for (var key in validPosition) {\n        var _coord = validPosition[key];\n        var dist = (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.distPoints)(_coord[0], _coord[1], launchBubble.x, launchBubble.y);\n        dists[key] = dist;\n      }\n\n      var minDist = 5 * this.radius * 5 * this.radius;\n\n      for (var _key in dists) {\n        var _dist = dists[_key];\n        minDist = Math.min(minDist, _dist);\n      }\n\n      for (var _key2 in validPosition) {\n        if (dists[_key2] === minDist) {\n          var _coord2 = validPosition[_key2];\n          launchBubble.x = _coord2[0];\n          launchBubble.y = _coord2[1];\n          var r = numRow + Math.floor(_key2 / 2) - 1;\n          (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"Position row: \".concat(r));\n          (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"Position key: , \".concat(_key2));\n          (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"New coordinates: \".concat(_coord2[0], \", \").concat(_coord2[1]));\n\n          if (r >= bubbles.length) {\n            var indent = !bubbles[bubbles.length - 1].indent;\n            var row = new _core_tool_js__WEBPACK_IMPORTED_MODULE_0__.RowBalls(launchBubble.y, indent);\n            (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"case 1: postionnement row y: \".concat(launchBubble.y));\n            row.addBall(launchBubble);\n            bubbles.push(row);\n          } else {\n            var _row = bubbles[r];\n            (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"case 2: postionnement row y: \".concat(_row.y));\n\n            _row.addBall(launchBubble);\n          }\n\n          this.floodFill(launchBubble, r);\n          launchBubble = null;\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"calculScore\",\n    value: function calculScore(nb) {\n      return 5 * (nb - 1) * (nb - 1);\n    }\n  }, {\n    key: \"calculScoreFalling\",\n    value: function calculScoreFalling(nb) {\n      var score = 0;\n\n      for (var i = 1; i <= nb; i++) {\n        score += Math.floor(Math.pow(1.2, i));\n      }\n\n      return 5 * score;\n    }\n  }, {\n    key: \"disappearBubbles\",\n    value: function disappearBubbles() {\n      for (var i = 0; i < bubbles.length; i++) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n\n          if (ball.checked) {\n            ball.status = \"disappear\";\n            ball.score = 10;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"removeBubblesRow\",\n    value: function removeBubblesRow(r) {\n      var balls = bubbles[r].balls;\n\n      if (r === bubbles.length - 1 && balls.length === 0) {\n        (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.debugConsole)(\"remove last line\");\n        bubbles.splice(r, 1);\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.save();\n      this.vScreen.transform();\n      this.ctx.fillStyle = \"rgba(20, 50, 20, 1)\";\n      this.ctx.fillRect(0, 0, this.vScreen.vW, this.vScreen.vH);\n      this.drawBubbles();\n      this.drawScorePanel();\n      this.drawCeil(); // this.ctx.fillStyle= \"red\"; \n      // this.ctx.font = \"12px Arial\";\n      // this.ctx.fillText(`${currentState}; Nb of Lines: ${countLines}; Speed: ${Math.floor(gameTC.speed)}`, this.wallS, fixY); \n      // this.ctx.fillStyle= \"red\"; \n      // this.ctx.font = \"12px Arial\"; \n      // for( let i = 0; i < this.nbRows; i++){\n      //     const y = yoffset+ this.radius + this.radius * Math.sqrt(3) * i;\n      //     this.ctx.fillText(Math.floor(y), -30, y); \n      // }\n      // for(let i = 0; i < bubbles.length; i++){\n      //     const y = yoffset+ this.radius + this.radius * Math.sqrt(3) * (i-2);\n      //     this.ctx.fillText(Math.floor(bubbles[i].y), this.vScreen.vW + 10, y); \n      // }\n      // for(let i = 0; i < this.nbCols; i++){\n      //     const x = this.wallS + this.radius + i * 2 * this.radius;\n      //     const y = yoffset + this.gridH + 20; \n      //     this.ctx.fillText(Math.floor(x), x-this.radius/2, y); \n      // }\n\n      this.drawThreshold();\n      this.drawGround();\n      this.drawWalls();\n      this.ctx.restore();\n    }\n  }, {\n    key: \"drawBubbles\",\n    value: function drawBubbles() {\n      this.ctx.imageSmoothingEnabled = false;\n\n      for (var i = 0; i < bubbles.length; i++) {\n        var balls = bubbles[i].balls;\n\n        for (var j = 0; j < balls.length; j++) {\n          var ball = balls[j];\n          var imgA = this.globals.assets.imgAnimals[ball.id];\n          var imgB = this.globals.assets.imgBubbles[ball.id][ball.bubbleFrameIndex];\n          ball.draw(this.ctx, imgA, imgB, colors[ball.id]);\n\n          if (ball.status === \"disappear\") {\n            this.drawScoring(ball);\n          } // this.ctx.fillStyle = \"red\"; \n          // this.ctx.fillText(ball.status, ball.x, ball.y); \n\n        }\n      }\n\n      for (var _i2 = 0; _i2 < waitingBubbles.length; _i2++) {\n        var _ball3 = waitingBubbles[_i2];\n        var _imgA = this.globals.assets.imgAnimals[_ball3.id];\n        var _imgB = this.globals.assets.imgBubbles[_ball3.id][_ball3.bubbleFrameIndex];\n\n        _ball3.draw(this.ctx, _imgA, _imgB, colors[_ball3.id]);\n      }\n\n      if (launchBubble) {\n        var _imgA2 = this.globals.assets.imgAnimals[launchBubble.id];\n        var _imgB2 = this.globals.assets.imgBubbles[launchBubble.id][launchBubble.bubbleFrameIndex];\n        launchBubble.draw(this.ctx, _imgA2, _imgB2, colors[launchBubble.id]);\n\n        if (!launchBubble.launched) {\n          this.ctx.strokeStyle = \"rgb(255, 255, 0)\";\n          this.ctx.beginPath();\n          this.ctx.moveTo(launchBubble.x, launchBubble.y);\n          this.ctx.lineTo(launchBubble.x + Math.cos(launchBubble.angle) * 50, launchBubble.y + Math.sin(launchBubble.angle) * 50);\n          this.ctx.stroke();\n\n          for (var _i3 = 0; _i3 < trajectory.length; _i3++) {\n            var coord = trajectory[_i3];\n            this.ctx.beginPath();\n            this.ctx.fillStyle = \"white\";\n            this.ctx.arc(coord.x, coord.y, 3, 0, 2 * Math.PI);\n            this.ctx.fill();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawWalls\",\n    value: function drawWalls() {\n      this.ctx.strokeStyle = \"rgb(205, 128, 0)\";\n      this.ctx.fillRect(0, 0, this.vScreen.vW, this.wallS);\n      this.ctx.fillRect(0, 0, this.wallS, this.vScreen.vH);\n      this.ctx.fillRect(this.vScreen.vW - this.wallS, 0, this.wallS, this.vScreen.vH);\n      this.ctx.fillRect(0, this.vScreen.vH - this.wallS, this.vScreen.vW, this.wallS);\n    }\n  }, {\n    key: \"drawScorePanel\",\n    value: function drawScorePanel() {\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fillRect(this.wallS, this.wallS, this.vScreen.vW - 2 * this.wallS, this.scorePanelH);\n      var text1 = \"SCORE  \" + totalScore;\n      (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text1, \"LEFT\", [205, 128, 0], \"24px Arial\", this.wallS, this.wallS, this.vScreen.vW - 2 * this.wallS, this.scorePanelH);\n    }\n  }, {\n    key: \"drawCeil\",\n    value: function drawCeil() {\n      this.ctx.fillStyle = \"rgb(205, 128, 0)\";\n      this.ctx.fillRect(0, this.wallS + this.scorePanelH, this.vScreen.vW, this.ceilH);\n    }\n  }, {\n    key: \"drawThreshold\",\n    value: function drawThreshold() {\n      this.ctx.fillStyle = \"rgb(200, 40, 150)\";\n      this.ctx.fillRect(0, yoffset + this.gridH, this.vScreen.vW, this.thresholdH);\n    }\n  }, {\n    key: \"drawGround\",\n    value: function drawGround() {\n      this.ctx.fillStyle = \"rgb(205, 128, 0)\";\n      var y = yoffset + this.gridH + Math.sqrt(3) * this.radius * 2;\n      var groundW = (this.vScreen.vW - 2 * this.radius) / 2;\n      this.ctx.fillRect(0, y, groundW, this.groundH);\n      this.ctx.fillRect(groundW + 2 * this.radius, y, groundW, this.groundH);\n      this.ctx.fillRect(groundW - this.groundH, y, this.groundH, 4 * this.radius + this.groundH);\n      this.ctx.fillRect(groundW + 2 * this.radius, y, this.groundH, 4 * this.radius + this.groundH); //this.ctx.fillText(currentState, 0, y);\n    }\n  }, {\n    key: \"drawScoring\",\n    value: function drawScoring(ball) {\n      this.ctx.font = \"14px Arial\";\n      var text = ball.score;\n      var w = this.ctx.measureText(text).width;\n      var h = this.ctx.measureText(\"M\").width;\n      (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], \"14px Arial\", ball.x - w / 2 - 2, ball.y - this.radius, w, h);\n      (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], \"14px Arial\", ball.x - w / 2, ball.y - this.radius - 2, w, h);\n      (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], \"14px Arial\", ball.x - w / 2 + 2, ball.y - this.radius, w, h);\n      (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], \"14px Arial\", ball.x - w / 2, ball.y - this.radius + 2, w, h);\n      (0,_core_tool_js__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [205, 128, 0], \"14px Arial\", ball.x - w / 2, ball.y - this.radius, w, h);\n    }\n  }]);\n\n  return Game;\n}();\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/main/game.js?");

/***/ }),

/***/ "./src/main/gameover.js":
/*!******************************!*\
  !*** ./src/main/gameover.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gameover\": () => (/* binding */ Gameover)\n/* harmony export */ });\n/* harmony import */ var _core_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/tool */ \"./src/core/tool.js\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main */ \"./src/main/main.js\");\n/* harmony import */ var _fadeEnd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fadeEnd */ \"./src/main/fadeEnd.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar nbAnimalTypes = 3;\nvar velocity = 200;\nvar maxTimeLaunch = 2;\nvar maxTimeGenerate = 0.5;\nvar alpha = 0.7;\nvar colors = [[0, 197, 255, alpha], [255, 50, 50, alpha], [131, 224, 76, alpha]];\nvar fixX, fixY, timerLaunch, timerGenerate;\n;\nvar playButton;\nvar bubbles, waitingBubbles, launchBubble;\nvar generate;\nvar Gameover = /*#__PURE__*/function () {\n  function Gameover(globals, score) {\n    _classCallCheck(this, Gameover);\n\n    this.globals = globals;\n    this.ctx = globals.ctx;\n    this.config = globals.config;\n    this.vScreen = globals.vScreen;\n    this.radius = this.config.radius;\n    this.score = score;\n  }\n\n  _createClass(Gameover, [{\n    key: \"init\",\n    value: function init() {\n      fixX = this.vScreen.vW / 2;\n      fixY = this.vScreen.vH - 5 * this.radius;\n      timerLaunch = 1 + (maxTimeLaunch - 1) * Math.random();\n      timerGenerate = maxTimeGenerate;\n      generate = true;\n      playButton = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Button(this.globals.assets.imgFont, \"RETRY\", 0, this.vScreen.vH / 2, this.vScreen.vW, 100, this.config.scaleTitle, [255, 153, 0, 0.7]);\n      bubbles = [];\n      launchBubble = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY, this.radius);\n      waitingBubbles = [];\n      waitingBubbles[0] = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 2 * this.radius, this.radius);\n      waitingBubbles[1] = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 4 * this.radius, this.radius);\n    }\n  }, {\n    key: \"randomLaunchBubble\",\n    value: function randomLaunchBubble(id, x, y, r) {\n      var ball = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Ball(id, x, y, r, true);\n      ball.launched = false;\n      ball.angle = -Math.PI / 2;\n      ball.dir = 1;\n\n      if (Math.random() > 0.5) {\n        ball.dir = -1;\n      }\n\n      return ball;\n    }\n  }, {\n    key: \"initLaunchStage\",\n    value: function initLaunchStage() {\n      timerLaunch = maxTimeLaunch * Math.random();\n      launchBubble = waitingBubbles[0];\n      launchBubble.y -= 2 * this.radius;\n      launchBubble.launched = false;\n      waitingBubbles[0] = waitingBubbles[1];\n      waitingBubbles[0].y -= 2 * this.radius;\n      waitingBubbles[1] = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 4 * this.radius, this.radius);\n    }\n  }, {\n    key: \"automaticLaunch\",\n    value: function automaticLaunch() {\n      if (launchBubble) {\n        launchBubble.vx = velocity * Math.cos(launchBubble.angle);\n        launchBubble.vy = velocity * Math.sin(launchBubble.angle);\n        bubbles.push(launchBubble);\n        launchBubble = null;\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      if ((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.isInButton)(this.vScreen.mouseX, this.vScreen.mouseY, playButton)) {\n        this.vScreen.mouseClick = false;\n        var fade = new _fadeEnd__WEBPACK_IMPORTED_MODULE_2__.FadeEnd(this.globals, \"game\", 0);\n        (0,_main__WEBPACK_IMPORTED_MODULE_1__.enter)(fade);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (this.vScreen.mouseClick) {\n        this.play();\n      }\n\n      if (!generate) {\n        timerGenerate -= dt;\n\n        if (timerGenerate <= 0) {\n          this.initLaunchStage();\n          timerGenerate = maxTimeGenerate;\n          generate = true;\n        }\n      } else {\n        timerLaunch -= dt;\n\n        if (timerLaunch <= 0) {\n          this.automaticLaunch();\n          generate = false;\n        }\n      }\n\n      if (launchBubble) {\n        this.updateLaunchDirection(dt);\n      }\n\n      this.updateBubbles(dt);\n    }\n  }, {\n    key: \"updateLaunchDirection\",\n    value: function updateLaunchDirection(dt) {\n      launchBubble.angle += launchBubble.dir * Math.PI * 1 / 4 * dt;\n\n      if (launchBubble.angle > -20 / 180 * Math.PI) {\n        launchBubble.angle = -20 / 180 * Math.PI;\n        launchBubble.dir = -1;\n      } else if (launchBubble.angle < -160 / 180 * Math.PI) {\n        launchBubble.angle = -160 / 180 * Math.PI;\n        launchBubble.dir = 1;\n      }\n\n      launchBubble.animationTimer -= dt;\n\n      if (launchBubble.animationTimer <= 0) {\n        launchBubble.frameIndex++;\n        launchBubble.animationTimer = launchBubble.animationSpeed;\n\n        if (launchBubble.frameIndex >= 2) {\n          launchBubble.frameIndex = 0;\n        }\n      }\n    }\n  }, {\n    key: \"updateBubbles\",\n    value: function updateBubbles(dt) {\n      for (var i = bubbles.length - 1; i >= 0; i--) {\n        var ball = bubbles[i];\n        ball.animationTimer -= dt;\n\n        if (ball.animationTimer <= 0) {\n          ball.frameIndex++;\n          ball.animationTimer = ball.animationSpeed;\n\n          if (ball.frameIndex >= 2) {\n            ball.frameIndex = 0;\n          }\n        }\n\n        ball.x += ball.vx * dt;\n        ball.y += ball.vy * dt;\n\n        if (ball.x <= this.radius) {\n          var diff = this.radius - ball.x;\n          ball.x += 2 * diff;\n          ball.vx = -ball.vx;\n        } else if (ball.x >= this.vScreen.vW - this.radius) {\n          var _diff = this.vScreen.vW - this.radius - ball.x;\n\n          ball.x += 2 * _diff;\n          ball.vx = -ball.vx;\n        }\n\n        if (ball.y <= -this.radius) {\n          bubbles.splice(i, 1);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.save();\n      this.vScreen.transform();\n      this.ctx.fillStyle = \"rgba(20, 50, 20, 1)\";\n      this.ctx.fillRect(0, 0, this.vScreen.vW, this.vScreen.vH);\n      this.ctx.imageSmoothingEnabled = false;\n      this.config.scaleTitle = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"GAME\", this.globals.assets.imgFont, 0, this.vScreen.vH * 0.5 / 6, this.vScreen.vW, this.vScreen.vH * 1 / 6, this.config.scaleTitle);\n      (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"OVER\", this.globals.assets.imgFont, 0, this.vScreen.vH * 1 / 6, this.vScreen.vW, this.vScreen.vH * 1.5 / 6, this.config.scaleTitle);\n      (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"SCORE:\" + this.score, this.globals.assets.imgFont, 0, this.vScreen.vH * 1.5 / 6, this.vScreen.vW, this.vScreen.vH / 2, this.config.scaleTitle * 0.8);\n      playButton.scale = this.config.scaleTitle;\n      playButton.draw(this.ctx);\n      this.drawBubbles();\n      this.drawBarrier();\n      this.ctx.restore();\n    }\n  }, {\n    key: \"drawBarrier\",\n    value: function drawBarrier() {\n      this.ctx.fillStyle = \"rgb(205, 128, 0)\";\n      var y = this.vScreen.vH - 4 * this.radius - 1 / 3 * this.radius;\n      var width = 10;\n      this.ctx.fillRect(fixX - this.radius - width, y, width, 4 * this.radius + 1 / 3 * this.radius);\n      this.ctx.fillRect(fixX + this.radius, y, width, 4 * this.radius + 1 / 3 * this.radius); //this.ctx.fillText(currentState, 0, y);\n    }\n  }, {\n    key: \"drawBubbles\",\n    value: function drawBubbles() {\n      this.ctx.imageSmoothingEnabled = false;\n\n      for (var i = 0; i < bubbles.length; i++) {\n        var ball = bubbles[i];\n        var imgA = this.globals.assets.imgAnimals[ball.id];\n        var imgB = this.globals.assets.imgBubbles[ball.id][ball.bubbleFrameIndex];\n        ball.draw(this.ctx, imgA, imgB, colors[ball.id]);\n      }\n\n      for (var _i = 0; _i < waitingBubbles.length; _i++) {\n        var _ball = waitingBubbles[_i];\n        var _imgA = this.globals.assets.imgAnimals[_ball.id];\n        var _imgB = this.globals.assets.imgBubbles[_ball.id][_ball.bubbleFrameIndex];\n\n        _ball.draw(this.ctx, _imgA, _imgB, colors[_ball.id]);\n      }\n\n      if (launchBubble) {\n        var _imgA2 = this.globals.assets.imgAnimals[launchBubble.id];\n        var _imgB2 = this.globals.assets.imgBubbles[launchBubble.id][launchBubble.bubbleFrameIndex];\n        launchBubble.draw(this.ctx, _imgA2, _imgB2, colors[launchBubble.id]);\n\n        if (!launchBubble.launched) {\n          this.ctx.strokeStyle = \"rgb(255, 255, 0)\";\n          this.ctx.lineWidth = 4;\n          this.ctx.beginPath();\n          this.ctx.moveTo(launchBubble.x, launchBubble.y);\n          this.ctx.lineTo(launchBubble.x + Math.cos(launchBubble.angle) * 50, launchBubble.y + Math.sin(launchBubble.angle) * 50);\n          this.ctx.stroke();\n        }\n      }\n    }\n  }]);\n\n  return Gameover;\n}();\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/main/gameover.js?");

/***/ }),

/***/ "./src/main/loader.js":
/*!****************************!*\
  !*** ./src/main/loader.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Load\": () => (/* binding */ Load)\n/* harmony export */ });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/main/main.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar Load = /*#__PURE__*/function () {\n  function Load(assets, nbAssets, nbBubbleImages) {\n    _classCallCheck(this, Load);\n\n    this.assets = assets;\n    this.nbAssets = nbAssets;\n    this.nbBubbleImages = nbBubbleImages;\n  }\n\n  _createClass(Load, [{\n    key: \"loader\",\n    value: function loader() {\n      this.loadImages();\n      this.loadSounds();\n    }\n  }, {\n    key: \"loadImages\",\n    value: function loadImages() {\n      for (var i = 0; i < this.assets.imgAnimals.length; i++) {\n        var src = \"images/img\" + i + \".png\";\n        this.assets.imgAnimals[i] = this.loadImage(src);\n      }\n\n      for (var _i = 0; _i < this.assets.imgBubbles.length; _i++) {\n        this.assets.imgBubbles[_i] = new Array(this.nbBubbleImages);\n\n        for (var j = 0; j < this.nbBubbleImages; j++) {\n          var _src = \"images/\".concat(_i, \"/imgBubble\").concat(j, \".png\");\n\n          this.assets.imgBubbles[_i][j] = this.loadImage(_src);\n        }\n      }\n\n      this.assets.imgFont = this.loadImage(\"images/imgFont.png\");\n      this.assets.imgFont_blue = this.loadImage(\"images/imgFont_blue.png\");\n      this.assets.imgStop = this.loadImage(\"images/imgStop.png\");\n      this.assets.imgPlay = this.loadImage(\"images/imgPlay.png\");\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(src) {\n      var img = new Image();\n      img.src = src;\n      img.onload = this.counter();\n      return img;\n    }\n  }, {\n    key: \"loadSounds\",\n    value: function loadSounds() {\n      this.assets.bgMusic = this.loadSound(\"sounds/bgMusic.mp3\");\n      this.assets.bgMusic.loop = true;\n      this.assets.bgMusic.volume = 0;\n      this.assets.deadSound = this.loadSound(\"sounds/dead.wav\");\n      this.assets.hit1Sound = this.loadSound(\"sounds/hit1.wav\");\n      this.assets.hit2Sound = this.loadSound(\"sounds/hit2.wav\");\n      this.assets.hit2Sound.volume = 0.6;\n      this.assets.pickupSound = this.loadSound(\"sounds/pickup.wav\");\n      this.assets.pickupSound.volume = 0.6;\n      this.assets.powerupSound = this.loadSound(\"sounds/powerup.wav\");\n      this.assets.explodeSound = this.loadSound(\"sounds/explosion.wav\");\n    }\n  }, {\n    key: \"loadSound\",\n    value: function loadSound(src) {\n      var sound = new Audio();\n      sound.src = src;\n      sound.addEventListener('canplaythrough', this.counter(), false);\n      return sound;\n    }\n  }, {\n    key: \"counter\",\n    value: function counter() {\n      this.nbAssets--;\n\n      if (this.nbAssets === 0) {\n        requestAnimationFrame(_main__WEBPACK_IMPORTED_MODULE_0__.gameLoop);\n      }\n    }\n  }]);\n\n  return Load;\n}();\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/main/loader.js?");

/***/ }),

/***/ "./src/main/main.js":
/*!**************************!*\
  !*** ./src/main/main.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enter\": () => (/* binding */ enter),\n/* harmony export */   \"gameLoop\": () => (/* binding */ gameLoop),\n/* harmony export */   \"Main\": () => (/* binding */ Main)\n/* harmony export */ });\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./menu */ \"./src/main/menu.js\");\n/* harmony import */ var _core_tool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/tool */ \"./src/core/tool.js\");\n/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loader */ \"./src/main/loader.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n //import { Game } from \"./game\";\n\nvar nbAnimalImages = 3;\nvar nbBubbleImages = 7;\nvar nbRows = 15;\nvar nbCols = 8;\nvar radius = 16;\nvar gridH = nbRows * radius * Math.sqrt(3);\nvar gridW = nbCols * 2 * radius + radius;\nvar scorePanelH = 48;\nvar can = document.querySelector(\"canvas\");\nvar ctx = can.getContext(\"2d\");\nvar ceilH = 10;\nvar groundH = 10;\nvar wallS = 10;\nvar thresholdH = 8;\nvar vsWidth = gridW + 2 * wallS;\nvar vsHeight = wallS + scorePanelH + ceilH + gridH + radius * Math.sqrt(3) + 6 * radius + wallS;\nvar realWidth = document.body.clientWidth;\nvar realHeight = document.body.clientHeight; // if(!window.cordova){\n//     if(realWidth > 600){\n//         realWidth = 600; \n//     }\n//     if(realHeight > 800){\n//         realHeight = 800; \n//     }\n// }\n\ncan.width = realWidth;\ncan.height = realHeight;\nvar vScreen = new _core_tool__WEBPACK_IMPORTED_MODULE_1__.VirtualScreen(ctx, vsWidth, vsHeight, realWidth, realHeight);\nvScreen.setStrategy();\n\nvar click = function click(e) {\n  vScreen.mouseClick = true;\n  vScreen.mouseX = (e.clientX - vScreen.xoffset) / vScreen.xScale;\n  vScreen.mouseY = (e.clientY - vScreen.yoffset) / vScreen.yScale;\n};\n\ncan.addEventListener(\"click\", function (e) {\n  click(e);\n}, false);\nvar nbAssets = nbAnimalImages + (nbAnimalImages + 1) * nbBubbleImages + 11;\nvar oldTime = 0;\nvar globals = {\n  scenes: [],\n  ctx: ctx,\n  assets: {\n    imgAnimals: new Array(nbAnimalImages),\n    imgBubbles: new Array(nbAnimalImages + 1),\n    imgFont: null,\n    imgFont_blue: null,\n    imgStop: null,\n    imgPlay: null,\n    bgMusic: null,\n    deadSound: null,\n    hit1Sound: null,\n    hit2Sound: null,\n    pickupSound: null,\n    powerupSound: null,\n    explodeSound: null\n  },\n  config: {\n    nbRows: nbRows,\n    nbCols: nbCols,\n    gridW: gridW,\n    gridH: gridH,\n    radius: radius,\n    scorePanelH: scorePanelH,\n    ceilH: ceilH,\n    groundH: groundH,\n    wallS: wallS,\n    thresholdH: thresholdH,\n    scaleTitle: 3\n  },\n  vScreen: vScreen\n};\nvar enter = function enter(s) {\n  globals.scenes.push(s);\n  s.init();\n};\nvar gameLoop = function gameLoop(time) {\n  if (oldTime === 0) {\n    var menu = new _menu__WEBPACK_IMPORTED_MODULE_0__.Menu(globals);\n    enter(menu); // const game = new Game(globals); \n    // enter(game); \n  }\n\n  var dt = (time - oldTime) / 1000;\n\n  if (dt >= 5 / 60) {\n    dt = 2 / 60;\n  }\n\n  while (dt >= 1 / 60 + 0.005) {\n    globals.scenes[globals.scenes.length - 1].update(1 / 60);\n    dt -= 1 / 60;\n  }\n\n  globals.scenes[globals.scenes.length - 1].update(dt); // dt = 1 / 60  // Ã  effacer;\n  // document.querySelector(\"select\").onchange = () => {\n  //     const seed = Number(document.querySelector(\"select\").value); \n  //     Math.reseed(seed); // Bug avec 6, pour un score au-dessus de 750\n  //     // -->CorrigÃ© (problÃ¨me de ligne intermÃ©diaire supprimÃ©e, qui fait foirer le floodfill)\n  //     globals.scenes[globals.scenes.length - 1].init();\n  // }\n  // let N = 1; \n  // if(document.getElementById(\"TURBO\").checked){N = 10;}\n  // for(let i = 0; i<N; i++){\n  //     if(!document.getElementById(\"HALT\").checked){\n  //globals.scenes[globals.scenes.length - 1].update(dt); \n  //     }\n  // }\n\n  globals.vScreen.mouseClick = false;\n  ctx.clearRect(0, 0, globals.vScreen.dW, globals.vScreen.dH);\n\n  for (var i = 0; i < globals.scenes.length; i++) {\n    var scene = globals.scenes[i];\n    scene.draw();\n  }\n\n  oldTime = time;\n  requestAnimationFrame(gameLoop);\n};\nvar Main = /*#__PURE__*/function () {\n  function Main() {\n    _classCallCheck(this, Main);\n  }\n\n  _createClass(Main, [{\n    key: \"start\",\n    value: function start() {\n      var load = new _loader__WEBPACK_IMPORTED_MODULE_2__.Load(globals.assets, nbAssets, nbBubbleImages);\n      load.loader();\n    }\n  }]);\n\n  return Main;\n}();\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/main/main.js?");

/***/ }),

/***/ "./src/main/menu.js":
/*!**************************!*\
  !*** ./src/main/menu.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Menu\": () => (/* binding */ Menu)\n/* harmony export */ });\n/* harmony import */ var _core_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/tool */ \"./src/core/tool.js\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main */ \"./src/main/main.js\");\n/* harmony import */ var _fadeStart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fadeStart */ \"./src/main/fadeStart.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar nbAnimalTypes = 3;\nvar velocity = 200;\nvar maxTimeLaunch = 2;\nvar maxTimeGenerate = 0.5;\nvar alpha = 0.7;\nvar colors = [[0, 197, 255, alpha], [255, 50, 50, alpha], [131, 224, 76, alpha]];\nvar fixX, fixY, timerLaunch, timerGenerate;\n;\nvar playButton;\nvar bubbles, waitingBubbles, launchBubble;\nvar generate;\nvar Menu = /*#__PURE__*/function () {\n  function Menu(globals) {\n    _classCallCheck(this, Menu);\n\n    this.globals = globals;\n    this.name = \"menu\";\n    this.ctx = globals.ctx;\n    this.config = globals.config;\n    this.vScreen = globals.vScreen;\n    this.radius = this.config.radius;\n  }\n\n  _createClass(Menu, [{\n    key: \"init\",\n    value: function init() {\n      fixX = this.vScreen.vW / 2;\n      fixY = this.vScreen.vH - 5 * this.radius;\n      timerLaunch = 1 + (maxTimeLaunch - 1) * Math.random();\n      timerGenerate = maxTimeGenerate;\n      generate = true;\n      playButton = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Button(this.globals.assets.imgFont, \"PLAY\", 0, this.vScreen.vH / 2, this.vScreen.vW, 100, this.config.scaleTitle, [255, 153, 0, 0.7]);\n      bubbles = [];\n      launchBubble = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY, this.radius);\n      waitingBubbles = [];\n      waitingBubbles[0] = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 2 * this.radius, this.radius);\n      waitingBubbles[1] = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 4 * this.radius, this.radius);\n    }\n  }, {\n    key: \"randomLaunchBubble\",\n    value: function randomLaunchBubble(id, x, y, r) {\n      var ball = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Ball(id, x, y, r, true);\n      ball.launched = false;\n      ball.angle = -Math.PI / 2;\n      ball.dir = 1;\n\n      if (Math.random() > 0.5) {\n        ball.dir = -1;\n      }\n\n      return ball;\n    }\n  }, {\n    key: \"initLaunchStage\",\n    value: function initLaunchStage() {\n      timerLaunch = maxTimeLaunch * Math.random();\n      launchBubble = waitingBubbles[0];\n      launchBubble.y -= 2 * this.radius;\n      launchBubble.launched = false;\n      waitingBubbles[0] = waitingBubbles[1];\n      waitingBubbles[0].y -= 2 * this.radius;\n      waitingBubbles[1] = this.randomLaunchBubble((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.randomInt)(nbAnimalTypes), fixX, fixY + 4 * this.radius, this.radius);\n    }\n  }, {\n    key: \"automaticLaunch\",\n    value: function automaticLaunch() {\n      if (launchBubble) {\n        launchBubble.vx = velocity * Math.cos(launchBubble.angle);\n        launchBubble.vy = velocity * Math.sin(launchBubble.angle);\n        bubbles.push(launchBubble);\n        launchBubble = null;\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      if ((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.isInButton)(this.vScreen.mouseX, this.vScreen.mouseY, playButton)) {\n        this.vScreen.mouseClick = false;\n        var fade = new _fadeStart__WEBPACK_IMPORTED_MODULE_2__.FadeStart(this.globals);\n        (0,_main__WEBPACK_IMPORTED_MODULE_1__.enter)(fade);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (this.vScreen.mouseClick) {\n        this.play();\n      }\n\n      if (!generate) {\n        timerGenerate -= dt;\n\n        if (timerGenerate <= 0) {\n          this.initLaunchStage();\n          timerGenerate = maxTimeGenerate;\n          generate = true;\n        }\n      } else {\n        timerLaunch -= dt;\n\n        if (timerLaunch <= 0) {\n          this.automaticLaunch();\n          generate = false;\n        }\n      }\n\n      if (launchBubble) {\n        this.updateLaunchDirection(dt);\n      }\n\n      this.updateBubbles(dt);\n    }\n  }, {\n    key: \"updateLaunchDirection\",\n    value: function updateLaunchDirection(dt) {\n      launchBubble.angle += launchBubble.dir * Math.PI * 1 / 4 * dt;\n\n      if (launchBubble.angle > -20 / 180 * Math.PI) {\n        launchBubble.angle = -20 / 180 * Math.PI;\n        launchBubble.dir = -1;\n      } else if (launchBubble.angle < -160 / 180 * Math.PI) {\n        launchBubble.angle = -160 / 180 * Math.PI;\n        launchBubble.dir = 1;\n      }\n\n      launchBubble.animationTimer -= dt;\n\n      if (launchBubble.animationTimer <= 0) {\n        launchBubble.frameIndex++;\n        launchBubble.animationTimer = launchBubble.animationSpeed;\n\n        if (launchBubble.frameIndex >= 2) {\n          launchBubble.frameIndex = 0;\n        }\n      }\n    }\n  }, {\n    key: \"updateBubbles\",\n    value: function updateBubbles(dt) {\n      for (var i = bubbles.length - 1; i >= 0; i--) {\n        var ball = bubbles[i];\n        ball.animationTimer -= dt;\n\n        if (ball.animationTimer <= 0) {\n          ball.frameIndex++;\n          ball.animationTimer = ball.animationSpeed;\n\n          if (ball.frameIndex >= 2) {\n            ball.frameIndex = 0;\n          }\n        }\n\n        ball.x += ball.vx * dt;\n        ball.y += ball.vy * dt;\n\n        if (ball.x <= this.radius) {\n          var diff = this.radius - ball.x;\n          ball.x += 2 * diff;\n          ball.vx = -ball.vx;\n        } else if (ball.x >= this.vScreen.vW - this.radius) {\n          var _diff = this.vScreen.vW - this.radius - ball.x;\n\n          ball.x += 2 * _diff;\n          ball.vx = -ball.vx;\n        }\n\n        if (ball.y <= -this.radius) {\n          bubbles.splice(i, 1);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.save();\n      this.vScreen.transform();\n      this.ctx.fillStyle = \"rgba(20, 50, 20, 1)\";\n      this.ctx.fillRect(0, 0, this.vScreen.vW, this.vScreen.vH);\n      this.ctx.imageSmoothingEnabled = false;\n      this.config.scaleTitle = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"BUBBLE\", this.globals.assets.imgFont, 0, this.vScreen.vH / 6, this.vScreen.vW, this.vScreen.vH * 1.5 / 6, this.config.scaleTitle);\n      (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"ANIMALS\", this.globals.assets.imgFont, 0, this.vScreen.vH * 1.5 / 6, this.vScreen.vW, this.vScreen.vH / 3, this.config.scaleTitle);\n      playButton.scale = this.config.scaleTitle;\n      playButton.draw(this.ctx);\n      this.drawBubbles();\n      this.drawBarrier();\n      this.ctx.restore();\n    }\n  }, {\n    key: \"drawBarrier\",\n    value: function drawBarrier() {\n      this.ctx.fillStyle = \"rgb(205, 128, 0)\";\n      var y = this.vScreen.vH - 4 * this.radius - 1 / 3 * this.radius;\n      var width = 10;\n      this.ctx.fillRect(fixX - this.radius - width, y, width, 4 * this.radius + 1 / 3 * this.radius);\n      this.ctx.fillRect(fixX + this.radius, y, width, 4 * this.radius + 1 / 3 * this.radius); //this.ctx.fillText(currentState, 0, y);\n    }\n  }, {\n    key: \"drawBubbles\",\n    value: function drawBubbles() {\n      this.ctx.imageSmoothingEnabled = false;\n\n      for (var i = 0; i < bubbles.length; i++) {\n        var ball = bubbles[i];\n        var imgA = this.globals.assets.imgAnimals[ball.id];\n        var imgB = this.globals.assets.imgBubbles[ball.id][ball.bubbleFrameIndex];\n        ball.draw(this.ctx, imgA, imgB, colors[ball.id]);\n      }\n\n      for (var _i = 0; _i < waitingBubbles.length; _i++) {\n        var _ball = waitingBubbles[_i];\n        var _imgA = this.globals.assets.imgAnimals[_ball.id];\n        var _imgB = this.globals.assets.imgBubbles[_ball.id][_ball.bubbleFrameIndex];\n\n        _ball.draw(this.ctx, _imgA, _imgB, colors[_ball.id]);\n      }\n\n      if (launchBubble) {\n        var _imgA2 = this.globals.assets.imgAnimals[launchBubble.id];\n        var _imgB2 = this.globals.assets.imgBubbles[launchBubble.id][launchBubble.bubbleFrameIndex];\n        launchBubble.draw(this.ctx, _imgA2, _imgB2, colors[launchBubble.id]);\n\n        if (!launchBubble.launched) {\n          this.ctx.strokeStyle = \"rgb(255, 255, 0)\";\n          this.ctx.lineWidth = 4;\n          this.ctx.beginPath();\n          this.ctx.moveTo(launchBubble.x, launchBubble.y);\n          this.ctx.lineTo(launchBubble.x + Math.cos(launchBubble.angle) * 50, launchBubble.y + Math.sin(launchBubble.angle) * 50);\n          this.ctx.stroke();\n        }\n      }\n    }\n  }]);\n\n  return Menu;\n}();\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/main/menu.js?");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://io.gswcott.bubbleanimals/./src/index.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;