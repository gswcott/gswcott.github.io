/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/core/firework.js":
/*!******************************!*\
  !*** ./src/core/firework.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Particle\": () => (/* binding */ Particle),\n/* harmony export */   \"Firework\": () => (/* binding */ Firework),\n/* harmony export */   \"Smoke\": () => (/* binding */ Smoke),\n/* harmony export */   \"updateParticles\": () => (/* binding */ updateParticles),\n/* harmony export */   \"drawParticles\": () => (/* binding */ drawParticles)\n/* harmony export */ });\n/* harmony import */ var _tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tool */ \"./src/core/tool.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\nvar Particle = function Particle(x, y, r, maxLife, type, color, cs) {\n  _classCallCheck(this, Particle);\n\n  this.x = x;\n  this.y = y;\n  this.r = r;\n  this.maxLife = maxLife;\n  this.type = type;\n  this.life = maxLife;\n  this.cs = cs;\n\n  if (this.type !== \"glitter\") {\n    this.life = (0,_tool__WEBPACK_IMPORTED_MODULE_0__.lerp)(maxLife / 2, maxLife, Math.random());\n  }\n\n  if (color) {\n    this.color = color;\n  } else {\n    this.color = (0,_tool__WEBPACK_IMPORTED_MODULE_0__.getRandomColor)();\n  }\n\n  this.vx = 0;\n  this.vy = 0;\n  var angle = Math.random() * 2 * Math.PI;\n\n  if (type === \"firework\") {\n    var v = 100 + Math.random() * 300;\n    this.vx = v * Math.cos(angle);\n    this.vy = v * Math.sin(angle);\n  } else if (type === \"smoke\") {\n    this.vx = (1 - Math.random() * 2) * 30;\n    this.vy = -500 + 100 * Math.random();\n  } else if (type === \"glitter\") {\n    var _v = 50 + Math.random() * 100;\n\n    this.vx = _v * Math.cos(angle);\n    this.vy = _v * Math.sin(angle);\n  } else if (type === \"shine\") {\n    var _v2 = 100 + Math.random() * 5;\n\n    this.vx = _v2 * Math.cos(angle);\n    this.vy = _v2 * Math.sin(angle);\n  } else if (type === \"explosion\") {\n    var _v3 = this.cs * 1 / 3 + Math.random() * this.cs * 2 / 3;\n\n    this.vx = _v3 * Math.cos(angle);\n    this.vy = _v3 * Math.sin(angle);\n  }\n};\nvar Firework = /*#__PURE__*/function () {\n  function Firework(x, y, r, maxLife, color, nbParticles, cs) {\n    _classCallCheck(this, Firework);\n\n    this.x = x;\n    this.y = y;\n    this.r = r;\n    this.maxLife = maxLife;\n    this.color = color;\n    this.nbParticles = nbParticles;\n    this.particles = [];\n    this.cs = cs;\n  }\n\n  _createClass(Firework, [{\n    key: \"create\",\n    value: function create() {\n      for (var nbP = 0; nbP < this.nbParticles; nbP++) {\n        this.particles.push(new Particle(this.x, this.y, this.r, this.maxLife, \"firework\", this.color, this.cs));\n      }\n    }\n  }]);\n\n  return Firework;\n}();\nvar Smoke = /*#__PURE__*/function () {\n  function Smoke(x, y, r, maxLife, color, nbParticles, cs) {\n    _classCallCheck(this, Smoke);\n\n    this.x = x;\n    this.y = y;\n    this.r = r;\n    this.maxLife = maxLife;\n    this.color = color;\n    this.nbParticles = nbParticles;\n    this.particles = [];\n    this.cs = cs;\n  }\n\n  _createClass(Smoke, [{\n    key: \"create\",\n    value: function create() {\n      for (var nbP = 0; nbP < this.nbParticles; nbP++) {\n        var randR = Math.random() * this.r + this.r / 2;\n        var coeffR = Math.random() * randR;\n        var coeffA = Math.random() * 2 * Math.PI;\n        this.particles.push(new Particle(this.x + coeffR * Math.cos(coeffA), this.y + coeffR * Math.sin(coeffA), randR, this.maxLife, \"smoke\", this.color, this.cs));\n      }\n    }\n  }]);\n\n  return Smoke;\n}(); // export class Explosion{\n//   constructor(x, y, r, maxLife, v, nbParticles){\n//     this.x = x; \n//     this.y = y;\n//     this.r = r; \n//     this.marLife = maxLife;\n//     this.v = v; \n//     this.color = [255, 165, 0, 1];\n//     this.nbParticles = nbParticles; \n//     this.particles = []; \n//   }\n//   create(){\n//     for (let nbP = 0; nbP < this.nbParticles; nbP++){\n//       const randR = Math.random() * this.r + this.r/2; \n//       const coeffR = Math.random()* randR; \n//       const coeffA = Math.random() * 2 * Math.PI; \n//       const particle = new Particle(this.x + coeffR * Math.cos(coeffA) , this.y + coeffR * Math.sin(coeffA), \n//       randR, null, \"explosion\", this.color); \n//       const rand = Math.random(); \n//       if(rand < 0.25){\n//         particle.vy = - this.v; \n//       }else if(rand >= 0.25 && rand < 0.5){\n//         particle.vx = this.v; \n//       }else if(rand >= 0.5 && rand < 0.75){\n//         particle.vy = this.v; \n//       }else if(rand >= 0.75){\n//         particle.vx = -this.v; \n//       }\n//       this.particles.push(particle);\n//     }\n//   }\n// }\n\nvar updateParticles = function updateParticles(dictParticles, dt) {\n  for (var key in dictParticles) {\n    var lstParticles = dictParticles[key];\n\n    for (var i = lstParticles.length - 1; i >= 0; i--) {\n      var p = lstParticles[i];\n\n      if (p.type === \"firework\") {\n        p.vy += 500 * dt;\n      } else if (p.type === \"smoke\") {\n        p.vy += 100 * dt;\n      }\n\n      p.x += p.vx * dt;\n      p.y += p.vy * dt;\n      p.life -= dt;\n\n      if (p.type === \"smoke\" || p.type === \"glitter\" || p.type === \"explosion\") {\n        p.color[3] = p.life / p.maxLife;\n      }\n\n      if (p.type === \"explosion\") {\n        p.color[1] = 80 + Math.random() * 100;\n      }\n\n      if (p.life <= 0) {\n        lstParticles.splice(i, 1);\n      }\n    }\n  }\n};\nvar drawParticles = function drawParticles(ctx, dictParticles, scaleExplosion) {\n  var T = Date.now() % 1000 / 1000 * 6.28;\n\n  for (var key in dictParticles) {\n    var lstParticles = dictParticles[key];\n\n    for (var i = 0; i < lstParticles.length; i++) {\n      var p = lstParticles[i];\n      ctx.fillStyle = (0,_tool__WEBPACK_IMPORTED_MODULE_0__.convertRGBA)(p.color);\n\n      if (p.type === \"firework\" || p.type === \"glitter\" || p.type === \"shine\") {\n        ctx.fillRect(p.x, p.y, 2 * p.r, 2 * p.r);\n      } else if (p.type === \"smoke\") {\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, p.r, 0, 2 * Math.PI);\n        ctx.fill();\n      } else if (p.type === \"explosion\") {\n        for (var _i = 0; _i < 30; _i++) {\n          p.color[1] = 80 + Math.random() * 100;\n          ctx.fillStyle = (0,_tool__WEBPACK_IMPORTED_MODULE_0__.convertRGBA)(p.color);\n          var t = p.life;\n          var xoff = scaleExplosion * (1 + Math.sin(_i * _i / 15)) * Math.cos(_i * 12.1 + 10 * t + T);\n          var yoff = scaleExplosion * (1 + Math.sin(_i * _i / 15)) * Math.sin(_i * 15.2 + 11 * t + T);\n          ctx.beginPath();\n          ctx.arc(p.x + xoff, p.y + yoff, p.r, 0, 2 * Math.PI);\n          ctx.fill();\n        }\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/core/firework.js?");

/***/ }),

/***/ "./src/core/tool.js":
/*!**************************!*\
  !*** ./src/core/tool.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"convertRGB\": () => (/* binding */ convertRGB),\n/* harmony export */   \"convertRGBA\": () => (/* binding */ convertRGBA),\n/* harmony export */   \"getRandomColor\": () => (/* binding */ getRandomColor),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"whiten\": () => (/* binding */ whiten),\n/* harmony export */   \"renderQuad\": () => (/* binding */ renderQuad),\n/* harmony export */   \"coordToPos\": () => (/* binding */ coordToPos),\n/* harmony export */   \"isRCValid\": () => (/* binding */ isRCValid),\n/* harmony export */   \"isRCValidFourDirs\": () => (/* binding */ isRCValidFourDirs),\n/* harmony export */   \"playAudioBuffer\": () => (/* binding */ playAudioBuffer),\n/* harmony export */   \"drawText\": () => (/* binding */ drawText),\n/* harmony export */   \"Quad\": () => (/* binding */ Quad),\n/* harmony export */   \"drawScore\": () => (/* binding */ drawScore),\n/* harmony export */   \"isInButton\": () => (/* binding */ isInButton),\n/* harmony export */   \"drawLine\": () => (/* binding */ drawLine),\n/* harmony export */   \"dirScale\": () => (/* binding */ dirScale),\n/* harmony export */   \"Camera\": () => (/* binding */ Camera),\n/* harmony export */   \"Bezier\": () => (/* binding */ Bezier),\n/* harmony export */   \"Scoring\": () => (/* binding */ Scoring),\n/* harmony export */   \"Explosion\": () => (/* binding */ Explosion),\n/* harmony export */   \"drawTitle\": () => (/* binding */ drawTitle),\n/* harmony export */   \"drawTitlePro\": () => (/* binding */ drawTitlePro),\n/* harmony export */   \"Button\": () => (/* binding */ Button),\n/* harmony export */   \"ImgButton\": () => (/* binding */ ImgButton),\n/* harmony export */   \"Cloud\": () => (/* binding */ Cloud),\n/* harmony export */   \"Sprite\": () => (/* binding */ Sprite),\n/* harmony export */   \"Fire\": () => (/* binding */ Fire),\n/* harmony export */   \"BombExploision\": () => (/* binding */ BombExploision)\n/* harmony export */ });\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar convertRGB = function convertRGB(colorArray) {\n  var res = \"rgb(+\" + colorArray[0] + \", \" + colorArray[1] + \", \" + colorArray[2] + \")\";\n  return res;\n};\nvar convertRGBA = function convertRGBA(colorArray) {\n  return \"rgba(\".concat(colorArray[0], \", \").concat(colorArray[1], \", \").concat(colorArray[2], \", \").concat(colorArray[3], \")\");\n};\nvar getRandomColor = function getRandomColor() {\n  var lst = [Math.random() * 255, Math.random() * 255, Math.random() * 255, 1];\n  return lst;\n};\nvar lerp = function lerp(a, b, t) {\n  return (1 - t) * a + t * b;\n};\nvar whiten = function whiten(color, t) {\n  return [lerp(color[0], 255, t), lerp(color[1], 255, t), lerp(color[2], 255, t), color[3]];\n};\nvar renderQuad = function renderQuad(r, c, w, h, gap) {\n  var quad = {};\n  quad.x = c * 21 + gap;\n  quad.y = r * h;\n  quad.w = w;\n  quad.h = h;\n  return quad;\n};\nvar coordToPos = function coordToPos(x, y, csW, csH) {\n  var r = Math.floor(y / csH);\n  var c = Math.floor(x / csW);\n  return {\n    r: r,\n    c: c\n  };\n};\nvar isRCValid = function isRCValid(r, c, nbRows, nbCols) {\n  if (r >= 0 && r < nbRows && c >= 0 && c < nbCols) {\n    return true;\n  }\n\n  return false;\n};\nvar isRCValidFourDirs = function isRCValidFourDirs(r, c, r0, c0) {\n  if (r === r0 - 1 && c === c0 || r === r0 + 1 && c === c0 || r === r0 && c === c0 || r === r0 && c === c0 - 1 || r === r0 && c === c0 + 1) {\n    return true;\n  }\n\n  return false;\n};\nvar playAudioBuffer = function playAudioBuffer(ctx, buffer, noteInterval) {\n  var source = ctx.createBufferSource();\n  source.buffer = buffer;\n  source.playbackRate.value = Math.pow(2, noteInterval / 12);\n  source.connect(ctx.destination);\n  source.start(0);\n}; // export const chime = (n) =>{\n//     let key;\n//     let octave;\n//     switch(n){\n//         case 0: key=\"C\";octave=\"4\"; break;\n//         case 1: key=\"D\";octave=\"4\"; break;\n//         case 2: key=\"E\";octave=\"4\"; break;\n//         case 3: key=\"F\";octave=\"4\"; break;\n//         case 4: key=\"G\";octave=\"4\"; break;\n//         case 5: key=\"A\";octave=\"4\"; break;\n//         case 6: key=\"B\";octave=\"4\"; break;\n//         case 7: key=\"C\";octave=\"5\"; break;\n//         case 8: key=\"D\";octave=\"5\"; break;\n//         case 9: key=\"E\";octave=\"5\"; break;\n//         case 10: key=\"F\";octave=\"5\"; break;\n//         case 11: key=\"G\";octave=\"5\"; break;\n//         default: key=\"A\";octave=\"5\"; break;\n//     }\n//     synth.triggerAttackRelease(key+octave, \"16n\");\n// }\n// export const chime = (src, n) => {\n//      const baseURL = \"./sounds/\"; \n//      let shifter  = new Tone.PitchShift(n+10);\n//      let player = new Tone.Player(baseURL + src + \".wav\").connect(shifter);\n//      Tone.loaded().then(() => {\n//         player.start();\n//      })\n// }\n\nvar drawText = function drawText(ctx, text, align, color, font, x, y, w, h) {\n  ctx.font = font;\n  ctx.fillStyle = convertRGB(color);\n  var textW = ctx.measureText(text).width;\n  var textH = ctx.measureText(\"M\").width;\n  var x0 = x;\n  var y0 = y + (h + textH) / 2;\n\n  if (align === \"CENTER\") {\n    x0 = x + (w - textW) / 2;\n  }\n\n  ctx.fillText(text, x0, y0);\n};\nvar Quad = function Quad(x, y, w, h) {\n  _classCallCheck(this, Quad);\n\n  this.x = x;\n  this.y = y;\n  this.w = w - 0.01; //Pour éviter le \"edge bleeding\"\n\n  this.h = h - 0.01;\n}; // export const drawScore = (ctx, imgFont, totalScore, startX, startY, endX, endY, scale) =>{\n//     const scoreText = [\"S\", \"C\", \"O\", \"R\", \"E\"]; \n//     // const alphabetQuads = getAlphabetQuads(14, 18); \n//     // const numberQuads = getNumberQuads(14, 18); \n//     const x = (startX + endX) / 2; \n//     const y = (startY + endY) / 2; \n//     totalScore = totalScore.toString(); \n//     const nbLetters =  scoreText.length + 1 + totalScore.length; \n//     //let d = 1; \n//     for(let i = 0; i < scoreText.length; i++){\n//         const quad = alphabetQuads_blue[scoreText[i]]; \n//         const dx = x - (nbLetters * quad.w * scale) / 2 + i * quad.w * scale; \n//         const dy = y - quad.h * scale / 2; \n//         // ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx - d, dy, quad.w*scale, quad.h*scale); \n//         // ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx + d, dy, quad.w*scale, quad.h*scale); \n//         ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx, dy, quad.w*scale, quad.h*scale); \n//     }\n//     for(let i = 0; i < totalScore.length; i++){\n//         const quad = numberQuads_blue[totalScore[i]];\n//         const dx = x - (nbLetters * quad.w * scale) / 2 + (i + scoreText.length)  * quad.w * scale; \n//         const dy = y - quad.h * scale / 2; \n//         // ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx - d, dy, quad.w * scale, quad.h * scale); \n//         // ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx + d, dy, quad.w * scale, quad.h * scale); \n//         ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx, dy, quad.w * scale, quad.h * scale); \n//         // if(totalScore[i] === 1){\n//         //     const gap = 3; \n//         //     const dx = x - (nbLetters * quad.w * scale) / 2 + (i + scoreText.length + 1) * quad.w * scale + gap * scale;\n//         //     const dy = y - quad.h * scale / 2; \n//         //     // ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx - d, dy, (quad.w - gap)* scale , quad.h * scale); \n//         //     // ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx + d, dy, (quad.w - gap)* scale , quad.h * scale); \n//         //     ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, dx, dy, (quad.w - gap)* scale , quad.h * scale); \n//         // }\n//     }\n// }\n\nvar drawScore = function drawScore(ctx, imgFont, totalScore, startX, startY, endX, endY, scale) {\n  var gapAfterScore = 10;\n  var scoreText = \"SCORE\";\n  var quad = alphabetQuads_blue[\"A\"];\n  var maxWidth = (scoreText.length + 12) * quad.w * scale + gapAfterScore;\n\n  if (maxWidth > endX - startX) {\n    scale = (endX - startX - gapAfterScore) / ((scoreText.length + 12) * quad.w);\n  }\n\n  var x = startX;\n  var y = startY;\n  totalScore = totalScore.toString();\n\n  for (var i = 0; i < scoreText.length; i++) {\n    var _quad = alphabetQuads_blue[scoreText[i]];\n\n    if (i !== 0) {\n      x += _quad.w * scale;\n    }\n\n    y = Math.floor((startY + endY) / 2 - _quad.h * scale / 2);\n    ctx.drawImage(imgFont, _quad.x, _quad.y, _quad.w, _quad.h, x, y, _quad.w * scale, _quad.h * scale);\n  }\n\n  x += gapAfterScore;\n\n  for (var _i = 0; _i < totalScore.length; _i++) {\n    var _quad2 = numberQuads_blue[totalScore[_i]];\n    x += _quad2.w * scale;\n    y = Math.floor((startY + endY) / 2 - _quad2.h * scale / 2);\n    ctx.drawImage(imgFont, _quad2.x, _quad2.y, _quad2.w, _quad2.h, x, y, _quad2.w * scale, _quad2.h * scale);\n  }\n\n  return scale;\n}; // export const drawHighScore = (ctx, imgFont, startX, startY, endX, endY, highScore) =>{\n//     const scoreText = [\"S\", \"C\", \"O\", \"R\", \"E\"]; \n//     const highText = [\"H\", \"I\", \"G\", \"H\"]; \n//     const alphabetQuads = getAlphabetQuads(); \n//     const numberQuads = getNumberQuads(); \n//     //console.log(numberQuads);\n//     ctx.imageSmoothingEnabled = false;\n//     for(let i = 0; i < highText.length; i++){\n//         const quad = alphabetQuads[highText[i]]; \n//         ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, (startX + endX) / 2 + i * quad.w, startY, quad.w, quad.h); \n//     }\n//     for(let i = 0; i < scoreText.length; i++){\n//         const quad = alphabetQuads[scoreText[i]]; \n//         ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, (startX + endX) / 2 + (5 + i) * quad.w , startY, quad.w, quad.h); \n//     }\n//     highScore = highScore.toString(); \n//     for(let i = 0; i < highScore.length; i++){\n//         const quad = numberQuads[highScore[i]]; \n//         ctx.drawImage(imgFont, quad.x, quad.y, quad.w, quad.h, (startX + endX) / 2 + (11 + i) * quad.w, startY, quad.w, quad.h); \n//     }\n// }\n\nvar isInButton = function isInButton(x, y, button) {\n  if (x >= button.x && x <= button.x + button.w && y >= button.y && y <= button.y + button.h) {\n    return true;\n  }\n\n  return false;\n};\nvar drawLine = function drawLine(ctx, linewidth, color, x0, y0, x1, y1) {\n  ctx.lineWidth = linewidth;\n  ctx.strokeStyle = convertRGB(color);\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.stroke();\n};\nvar dirScale = function dirScale(i) {\n  var dir = {\n    r: 0,\n    c: 0\n  };\n\n  switch (i) {\n    case 0:\n      dir.r = -1;\n      break;\n\n    case 1:\n      dir.c = 1;\n      break;\n\n    case 2:\n      dir.r = 1;\n      break;\n\n    case 3:\n      dir.c = -1;\n  }\n\n  return dir;\n};\nvar Camera = /*#__PURE__*/function () {\n  function Camera() {\n    _classCallCheck(this, Camera);\n\n    this.x = 0;\n    this.y = 0;\n  }\n\n  _createClass(Camera, [{\n    key: \"update\",\n    value: function update() {\n      this.x *= -0.7;\n      this.y *= -0.7;\n\n      if (Math.abs(this.x) < 0.01) {\n        this.x = 0;\n      }\n\n      if (Math.abs(this.y) < 0.01) {\n        this.y = 0;\n      }\n    }\n  }, {\n    key: \"shake\",\n    value: function shake() {\n      this.x = 7;\n      this.y = 4;\n    }\n  }]);\n\n  return Camera;\n}();\nvar Bezier = /*#__PURE__*/function () {\n  function Bezier(x0, y0, x1, y1, x2, y2) {\n    _classCallCheck(this, Bezier);\n\n    this.xstart = x0;\n    this.ystart = y0;\n    this.xmid = x1;\n    this.ymid = y1;\n    this.xend = x2;\n    this.yend = y2;\n  }\n\n  _createClass(Bezier, [{\n    key: \"getX\",\n    value: function getX(t) {\n      return lerp(lerp(this.xstart, this.xmid, t), lerp(this.xmid, this.xend, t), t);\n    }\n  }, {\n    key: \"getY\",\n    value: function getY(t) {\n      return lerp(lerp(this.ystart, this.ymid, t), lerp(this.ymid, this.yend, t), t);\n    }\n  }]);\n\n  return Bezier;\n}();\nvar Scoring = function Scoring(score, maxLife, path) {\n  _classCallCheck(this, Scoring);\n\n  this.score = score;\n  this.maxLife = maxLife;\n  this.life = maxLife;\n  this.path = path;\n}; // export class Explosion {\n//     constructor(x0, y0, x1, y1, stepX, stepY, dirX, dirY, nbParticles){\n//         this.x0 = x0;\n//         this.y0 = y0;\n//         this.x1 = x1;\n//         this.y1 = y1;\n//         this.stepX = stepX;\n//         this.stepY = stepY;\n//         this.dirX = dirX;\n//         this.dirY = dirY; \n//         this.nbParticles = nbParticles;\n//     }\n// }\n\nvar Explosion = function Explosion(maxLife, x0, y0, dirX, dirY, path, nbParticles) {\n  _classCallCheck(this, Explosion);\n\n  this.maxLife = maxLife;\n  this.life = maxLife;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.dirX = dirX;\n  this.dirY = dirY;\n  this.path = path;\n  this.nbParticles = nbParticles;\n}; // export class Button {\n//     constructor(x, y, w, h, colorB, gapC, text, colorT, font){\n//         this.x = x;\n//         this.y = y;\n//         this.w = w;\n//         this.h = h;\n//         this.colorB = colorB;\n//         this.gapColor = gapC;\n//         this.text = text;\n//         this.colorT = colorT;\n//         this.font = font; \n//     }\n//     draw(ctx){\n//         ctx.fillStyle = convertRGB(this.colorB);\n//         ctx.fillRect(this.x, this.y, this.w, this.h);\n//         const lightColor = [this.colorB[0] + this.gapColor, this.colorB[1] + this.gapColor,this.colorB[2] + this.gapColor];\n//         const darkColor = [this.colorB[0] - this.gapColor, this.colorB[1] - this.gapColor,this.colorB[2] - this.gapColor];\n//         drawLine(ctx, 3, lightColor, this.x, this.y, this.x, this.y + this.h);\n//         drawLine(ctx, 3, lightColor, this.x, this.y, this.x + this.w, this.y);\n//         drawLine(ctx, 3, darkColor, this.x + this.w, this.y,this.x + this.w, this.y + this.h);\n//         drawLine(ctx, 3, darkColor, this.x, this.y + this.h,this.x + this.w, this.y + this.h);\n//         drawText(ctx, this.text, \"CENTER\", this.colorT, this.font, this.x, this.y, this.w, this.h);\n//     }\n// }\n// export const getNumberQuads = () => {\n//     const w = 15; \n//     const h = 25; \n//     let quads = {}; \n//     for(let i=0; i<=9; i++){\n//         let quad = new Quad(210 + (i-1) * w, 2 * h, w, h); \n//         if(i===0){\n//             quad = new Quad(210 + 9 * w, 2 * h, w, h); \n//         }\n//         quads[i.toString()] = quad;\n//     }\n//     return quads;\n// }\n// export const getAlphabetQuads = () => {\n//     const w = 15; \n//     const h = 25; \n//     let quads = {}; \n//     const alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \n//                         \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\",\n//                         \"W\", \"X\", \"Y\",\"Z\"]; \n//     for(let i=0; i<=25; i++){\n//         let quad;\n//         if(i<12){\n//             quad = new Quad(180 + i * w, 0, w, h); \n//         }else if(i<24){\n//             quad = new Quad(180 + (i-12) * w, h, w, h); \n//         }else{\n//             quad = new Quad(180 + (i-24) * w, 2*h, w, h); \n//         }\n//         quads[alphabets[i]] = quad; \n//     }\n//     return quads;\n// }\n\nvar getNumberQuads = function getNumberQuads(tsW, tsH, w, h) {\n  var quads = {};\n\n  for (var i = 0; i <= 9; i++) {\n    var quad = new Quad(i * tsW, tsH, w, h);\n    quads[i.toString()] = quad;\n  }\n\n  return quads;\n};\n\nvar getAlphabetQuads = function getAlphabetQuads(tsW, tsH, w, h) {\n  var quads = {};\n  var alphabets = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n  for (var i = 0; i < 626; i++) {\n    var quad = void 0;\n\n    if (i < 15) {\n      quad = new Quad((i + 1) * tsW, 2 * tsH, w, h);\n    } else if (i < 26) {\n      quad = new Quad((i - 15) * tsW, 3 * tsH, w, h);\n    }\n\n    quads[alphabets[i]] = quad;\n  }\n\n  return quads;\n};\n\nvar alphabetQuads = getAlphabetQuads(12, 13, 12, 13);\nvar numberQuads = getNumberQuads(12, 13, 12, 13);\nvar alphabetQuads_blue = getAlphabetQuads(14, 18, 14, 16);\nvar numberQuads_blue = getNumberQuads(14, 18, 14, 16);\nvar drawTitle = function drawTitle(ctx, text, imgFont, startX, startY, endX, endY, scale) {\n  var nbLetters = text.length;\n  var quad = alphabetQuads[\"A\"];\n  var gap = quad.w / 5;\n  var maxWidth = (nbLetters * (gap + quad.w) - gap) * scale;\n\n  if (maxWidth > (endX - startX) * 0.8) {\n    scale = (endX - startX) * 0.8 / (nbLetters * (gap + quad.w) - gap);\n    maxWidth = (nbLetters * (gap + quad.w) - gap) * scale;\n  }\n\n  var x = (startX + endX) / 2;\n  var y = (startY + endY) / 2;\n\n  for (var i = 0; i < nbLetters; i++) {\n    var _quad3 = alphabetQuads[text[i]];\n    var dx = x - maxWidth / 2 + i * (gap + _quad3.w) * scale;\n    var dy = y - _quad3.h * scale / 2;\n    ctx.drawImage(imgFont, _quad3.x, _quad3.y, _quad3.w, _quad3.h, dx, dy, Math.floor(_quad3.w * scale) + 1, Math.floor(_quad3.h * scale) + 1);\n  }\n\n  return scale;\n};\nvar drawTitlePro = function drawTitlePro(ctx, text, imgFont, startX, startY, endX, endY, scale, t) {\n  var alphabetQuads = getAlphabetQuads(12, 13);\n  var x = (startX + endX) / 2;\n  var y = (startY + endY) / 2;\n  var nbLetters = text.length; //const d = 2; \n\n  for (var i = 0; i < nbLetters; i++) {\n    var quad = alphabetQuads[text[i]];\n    var gap = quad.w / 5;\n\n    for (var xoff = 0; xoff < 12; xoff++) {\n      var omega = i + xoff / 12;\n      var dx = x + xoff * scale - nbLetters * (gap + quad.w) * scale / 2 + gap / 2 * scale + i * (gap + quad.w) * scale;\n      var dy = y - quad.h * scale / 2 + 20 * Math.sin(omega / 2 + t / 300);\n      ctx.drawImage(imgFont, quad.x + xoff, quad.y, 1, quad.h, dx, dy, scale, quad.h * scale);\n    }\n  }\n};\nvar Button = /*#__PURE__*/function () {\n  function Button(img, text, x, y, w, h, scale, bgColor) {\n    _classCallCheck(this, Button);\n\n    this.img = img;\n    this.text = text;\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n    this.scale = scale;\n    this.bgColor = bgColor;\n  }\n\n  _createClass(Button, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.fillStyle = convertRGBA(this.bgColor);\n      ctx.fillRect(this.x, this.y, this.w, this.h);\n      drawTitle(ctx, this.text, this.img, this.x, this.y + 20 * Math.sin(Date.now() / 200), this.x + this.w, this.y + this.h, this.scale);\n    }\n  }]);\n\n  return Button;\n}();\nvar ImgButton = /*#__PURE__*/function () {\n  function ImgButton(img, x, y, scale) {\n    _classCallCheck(this, ImgButton);\n\n    this.img = img;\n    this.x = x;\n    this.y = y;\n    this.w = img.width * scale;\n    this.h = img.height * scale;\n    this.scale = scale;\n  }\n\n  _createClass(ImgButton, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n    }\n  }]);\n\n  return ImgButton;\n}();\nvar Cloud = function Cloud(id, x, y, w, h, vx, vy) {\n  _classCallCheck(this, Cloud);\n\n  this.id = id;\n  this.x = x;\n  this.y = y;\n  this.w = w;\n  this.h = h;\n  this.vx = vx;\n  this.vy = vy;\n};\nvar Sprite = function Sprite(x, y, id, status, vy, targetY, bombTime) {\n  _classCallCheck(this, Sprite);\n\n  this.x = x;\n  this.y = y;\n  this.id = id;\n  this.status = status;\n  this.vx = 0;\n  this.vy = vy;\n  this.targetX = this.x;\n  this.targetY = targetY;\n  this.animationSpeed = 1;\n  this.animationTimer = this.animationSpeed - Math.random();\n  this.frameIndex = 0;\n  this.quads = [];\n  this.bomb = false;\n  this.bombMaxTime = bombTime;\n  this.bombTimer = bombTime;\n  this.checked = false;\n  var gap = 3;\n\n  if (id === 1) {\n    gap = 5;\n  } else if (id === 2 || id === 4 || id === 5) {\n    gap = 4;\n  }\n\n  this.quads.push(renderQuad(0, 0, 16, 16, gap));\n  this.quads.push(renderQuad(0, 2, 16, 16, gap));\n};\nvar Fire = /*#__PURE__*/function () {\n  function Fire(x, y, dir, vx, vy, targetX, targetY) {\n    _classCallCheck(this, Fire);\n\n    this.x = x;\n    this.y = y;\n    this.dir = dir;\n    this.vx = vx;\n    this.vy = vy;\n    this.targetX = targetX;\n    this.targetY = targetY;\n    this.animationSpeed = 0.1;\n    this.animationTimer = this.animationSpeed;\n    this.frameIndex = 0;\n    this.quads = [];\n  }\n\n  _createClass(Fire, [{\n    key: \"getQuads\",\n    value: function getQuads() {\n      for (var i = 0; i < 9; i++) {\n        var x = void 0,\n            y = void 0;\n\n        if (this.dir.c !== 0) {\n          x = i * 68;\n          y = 0;\n          this.quads[i] = new Quad(x, y, 68, 9);\n        }\n\n        if (this.dir.r !== 0) {\n          x = 0;\n          y = i * 68;\n          this.quads[i] = new Quad(x, y, 9, 68);\n        }\n      }\n    }\n  }]);\n\n  return Fire;\n}();\nvar BombExploision = function BombExploision(r, c) {\n  _classCallCheck(this, BombExploision);\n\n  this.r = r;\n  this.c = c;\n  this.nbFrames = 5;\n};\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/core/tool.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main/main */ \"./src/main/main.js\");\n/* harmony import */ var _main_stop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main/stop */ \"./src/main/stop.js\");\n\n // https://en.wikipedia.org/wiki/Lehmer_random_number_generator\n\nvar AAA = 16807;\nvar MMM = Math.pow(2, 31) - 1;\nvar XXX = 1;\n\nvar ff = function ff() {\n  XXX = AAA * XXX % MMM;\n  return XXX / MMM;\n};\n\nMath[\"random\"] = ff;\n\nMath[\"reseed\"] = function (s) {\n  XXX = s;\n}; // console.log(Math.random())\n// console.log(Math.random())\n// console.log(Math.random())\n\n\nif (window.cordova) {\n  document.addEventListener(\"deviceready\", function () {\n    navigator.splashscreen.hide();\n    screen.orientation.lock('portrait');\n    var main = new _main_main__WEBPACK_IMPORTED_MODULE_0__.Main();\n    main.start();\n  });\n} else {\n  var main = new _main_main__WEBPACK_IMPORTED_MODULE_0__.Main();\n  main.start();\n}\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/index.js?");

/***/ }),

/***/ "./src/main/fadeEnd.js":
/*!*****************************!*\
  !*** ./src/main/fadeEnd.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FadeEnd\": () => (/* binding */ FadeEnd)\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/main/game.js\");\n/* harmony import */ var _gameover__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gameover */ \"./src/main/gameover.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar distW = 48;\nvar distH = 48;\nvar sizeW = 0;\nvar sizeH = 0;\nvar rects, t, fadeState;\n\nvar Rect = function Rect(x, y, w, h) {\n  _classCallCheck(this, Rect);\n\n  this.centerX = x;\n  this.centerY = y;\n  this.w = w;\n  this.h = h;\n};\n\nvar FadeEnd = /*#__PURE__*/function () {\n  function FadeEnd(globals, toScene) {\n    _classCallCheck(this, FadeEnd);\n\n    this.globals = globals;\n    this.name = \"fadeEnd\";\n    this.ctx = this.globals.can.getContext(\"2d\");\n    this.toScene = toScene;\n  }\n\n  _createClass(FadeEnd, [{\n    key: \"init\",\n    value: function init() {\n      rects = [];\n      fadeState = \"out\";\n      t = 0;\n\n      for (var x = 0; x < this.globals.can.width + distW; x += distW) {\n        for (var y = 0; y < this.globals.can.height + distH; y += distH) {\n          rects.push(new Rect(x, y, sizeW, sizeH));\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (fadeState === \"out\") {\n        t += 3 * dt;\n\n        if (t >= 1) {\n          t = 1;\n          fadeState = \"in\";\n          var newScene;\n\n          if (this.toScene === \"game\") {\n            newScene = new _game__WEBPACK_IMPORTED_MODULE_0__.Game(this.globals);\n          } else if (this.toScene === \"gameover\") {\n            newScene = new _gameover__WEBPACK_IMPORTED_MODULE_1__.Gameover(this.globals);\n          }\n\n          newScene.init();\n          this.globals.scenes.splice(this.globals.scenes.length - 2, 1, newScene);\n        }\n      } else if (fadeState === \"in\") {\n        t -= 3 * dt;\n\n        if (t <= 0) {\n          t = 0;\n          this.globals.scenes.splice(this.globals.scenes.length - 1, 1);\n\n          if (this.toScene === \"game\") {\n            this.globals.assets.bgMusic.play();\n          } else if (this.toScene === \"gameover\") {\n            this.globals.assets.endMusic.play();\n          }\n        }\n      }\n\n      for (var i = 0; i < rects.length; i++) {\n        var rect = rects[i];\n        rect.sizeW = distW * t;\n        rect.sizeH = distH * t;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      for (var i = 0; i < rects.length; i++) {\n        var rect = rects[i];\n        this.ctx.fillStyle = \"rgb(0, 0, 0)\";\n        this.ctx.fillRect(rect.centerX - rect.sizeW / 2, rect.centerY - rect.sizeH / 2, rect.sizeW, rect.sizeH);\n      }\n    }\n  }]);\n\n  return FadeEnd;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/fadeEnd.js?");

/***/ }),

/***/ "./src/main/fadeStart.js":
/*!*******************************!*\
  !*** ./src/main/fadeStart.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FadeStart\": () => (/* binding */ FadeStart)\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/main/game.js\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\nvar radius = 45;\nvar dist = 64;\nvar circles, t, fadeState;\n\nvar Circle = function Circle(x, y, r) {\n  _classCallCheck(this, Circle);\n\n  this.x = x;\n  this.y = y;\n  this.r = r;\n};\n\nvar FadeStart = /*#__PURE__*/function () {\n  function FadeStart(globals) {\n    _classCallCheck(this, FadeStart);\n\n    this.globals = globals;\n    this.name = \"fadeStart\";\n    this.ctx = this.globals.can.getContext(\"2d\");\n  }\n\n  _createClass(FadeStart, [{\n    key: \"init\",\n    value: function init() {\n      circles = [];\n      t = 0;\n      fadeState = \"out\";\n\n      for (var x = 0; x < this.globals.can.width + radius; x += dist) {\n        for (var y = 0; y < this.globals.can.height + radius; y += dist) {\n          var c = new Circle(x, y, 0);\n          circles.push(c);\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (fadeState === \"out\") {\n        t += 3 * dt;\n\n        if (t >= 1) {\n          t = 1;\n          fadeState = \"in\";\n          var game = new _game__WEBPACK_IMPORTED_MODULE_0__.Game(this.globals);\n          game.init();\n          this.globals.scenes.splice(this.globals.scenes.length - 2, 1, game);\n        }\n      } else if (fadeState === \"in\") {\n        t -= 3 * dt;\n\n        if (t <= 0) {\n          t = 0;\n          this.globals.scenes.splice(this.globals.scenes.length - 1, 1);\n          this.globals.assets.bgMusic.play();\n        }\n      }\n\n      for (var i = 0; i < circles.length; i++) {\n        var circle = circles[i];\n        circle.r = radius * t;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      for (var i = 0; i < circles.length; i++) {\n        var circle = circles[i];\n        this.ctx.fillStyle = \"rgb(0, 0, 0)\";\n        this.ctx.beginPath();\n        this.ctx.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI);\n        this.ctx.fill();\n      }\n    }\n  }]);\n\n  return FadeStart;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/fadeStart.js?");

/***/ }),

/***/ "./src/main/game.js":
/*!**************************!*\
  !*** ./src/main/game.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var _core_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/tool */ \"./src/core/tool.js\");\n/* harmony import */ var _core_firework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/firework */ \"./src/core/firework.js\");\n/* harmony import */ var _fadeEnd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fadeEnd */ \"./src/main/fadeEnd.js\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./main */ \"./src/main/main.js\");\n/* harmony import */ var _stop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stop */ \"./src/main/stop.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\nvar durationExplode = 0.2;\nvar durationFall = 0.05;\nvar maxWaitTimeGenerate = 1.5;\nvar colors = [[131, 224, 76, 0.8], [209, 233, 237, 0.8], [0, 197, 255, 0.8], [255, 181, 70, 0.8], [254, 186, 203, 0.8], [96, 112, 120, 0.8], [230, 66, 100, 0.8]];\nvar camera = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Camera();\nvar scaleFont = 1.5;\nvar currentState = \"WAIT_WICK\";\nvar nbAnimalTypes = 3;\nvar countAnimals = 0;\nvar sprites = [];\nvar particles;\nvar grid = [];\nvar gridCheck = [];\nvar scorings = [];\nvar explosions = [];\nvar totalScore = 0;\nvar highScore = 0;\nvar generate = false;\nvar waitTimeGenerate = maxWaitTimeGenerate;\nvar timerGenerate = waitTimeGenerate;\nvar timerExplode = durationExplode;\nvar lastSelectedSprite = null;\nvar stopButton;\nvar bombedScoring;\nvar FPS;\nvar Game = /*#__PURE__*/function () {\n  function Game(globals) {\n    _classCallCheck(this, Game);\n\n    this.globals = globals;\n    this.name = \"game\";\n    this.ctx = globals.can.getContext(\"2d\");\n    this.csW = globals.config.csW;\n    this.csH = globals.config.csH;\n    this.nbRows = globals.config.nbRows;\n    this.nbCols = globals.config.nbCols;\n    this.canW = globals.can.width;\n    this.canH = globals.can.height;\n    this.transX = globals.config.transX;\n    this.transY = globals.config.transY;\n    this.scaleImage = Math.min(globals.config.csW, globals.config.csH);\n    this.scaleTitle = globals.config.scaleTitle;\n  }\n\n  _createClass(Game, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      currentState = \"WAIT_CLICK\";\n      nbAnimalTypes = 3;\n      countAnimals = 0;\n      particles = {\n        firework: [],\n        smoke: [],\n        scoring: [],\n        explosion: []\n      };\n      scorings = [];\n      explosions = [];\n      totalScore = 0;\n      highScore = 0;\n      generate = false;\n      waitTimeGenerate = maxWaitTimeGenerate;\n      timerGenerate = waitTimeGenerate;\n      timerExplode = durationExplode;\n      lastSelectedSprite = null;\n      bombedScoring = null;\n      var scaleStop = 2;\n      var x = this.canW - this.globals.assets.imgStop.width * scaleStop - 20;\n      var y = this.transY / 2 - this.globals.assets.imgStop.width * scaleStop / 2;\n      stopButton = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.ImgButton(this.globals.assets.imgStop, x, y, scaleStop);\n      Math.reseed(1);\n      this.initSprites();\n      document.addEventListener(\"pause\", function () {\n        var currentScene = _this.globals.scenes[_this.globals.scenes.length - 1];\n\n        if (currentScene.name !== \"stop\" && currentScene.name !== \"menu\" && currentScene.name !== \"gameover\") {\n          var stop = new _stop__WEBPACK_IMPORTED_MODULE_4__.Stop(_this.globals);\n          (0,_main__WEBPACK_IMPORTED_MODULE_3__.enter)(stop);\n        } else if (currentScene.name === \"gameover\") {\n          _this.globals.assets.endMusic.pause();\n        }\n      });\n      document.addEventListener(\"backbutton\", function () {\n        var currentScene = _this.globals.scenes[_this.globals.scenes.length - 1];\n\n        if (currentScene.name !== \"stop\" && currentScene.name !== \"menu\" && currentScene.name !== \"gameover\") {\n          var stop = new _stop__WEBPACK_IMPORTED_MODULE_4__.Stop(_this.globals);\n          (0,_main__WEBPACK_IMPORTED_MODULE_3__.enter)(stop);\n        } else if (currentScene.name === \"gameover\") {\n          _this.globals.assets.endMusic.pause();\n\n          navigator.app && navigator.app.exitApp() || device && device.exitApp();\n        }\n      }, false);\n    }\n  }, {\n    key: \"initSprites\",\n    value: function initSprites() {\n      grid = [];\n      sprites = [];\n\n      for (var r = 0; r < this.nbRows; r++) {\n        grid[r] = [];\n\n        for (var c = 0; c < this.nbCols; c++) {\n          if (r >= this.nbRows - 12) {\n            grid[r][c] = Math.floor(Math.random() * nbAnimalTypes);\n            var bombTimer = 0;\n\n            if (Math.random() < 0.01) {\n              bombTimer = 10 + Math.random() * 2;\n            }\n\n            var sprite = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Sprite(c * this.csW, r * this.csH, grid[r][c], \"IDLE\", 0, r * this.csH, bombTimer);\n            sprites.push(sprite);\n          } else {\n            grid[r][c] = -1;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"initGridCheck\",\n    value: function initGridCheck() {\n      gridCheck = [];\n\n      for (var r = 0; r < this.nbRows; r++) {\n        gridCheck[r] = [];\n\n        for (var c = 0; c < this.nbCols; c++) {\n          gridCheck[r][c] = 0;\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      FPS = 1 / dt;\n\n      if (dt > 0.1) {\n        dt = 0.1;\n      }\n\n      if (currentState !== \"START_MENU\" && currentState !== \"GAME_OVER\") {\n        if (!generate) {\n          timerGenerate -= dt;\n\n          if (timerGenerate <= 0) {\n            timerGenerate = waitTimeGenerate;\n            generate = true;\n          }\n        }\n\n        for (var i = scorings.length - 1; i >= 0; i--) {\n          var scoring = scorings[i];\n          scoring.life -= dt;\n          var t = 1 - scoring.life / scoring.maxLife;\n\n          for (var _i = 0; _i < 7; _i++) {\n            var particleScoring = new _core_firework__WEBPACK_IMPORTED_MODULE_1__.Particle(scoring.path.getX(t), scoring.path.getY(t), 2.5, 0.8, \"glitter\", [255, 255, 255 * Math.random(), 1], Math.min(this.csW, this.csH));\n            particles.scoring.push(particleScoring);\n          }\n\n          if (scoring.life <= 0) {\n            totalScore += scoring.score;\n            scorings.splice(i, 1);\n          }\n        }\n\n        (0,_core_firework__WEBPACK_IMPORTED_MODULE_1__.updateParticles)(particles, dt);\n        this.updateSprites(dt);\n\n        if (currentState === \"WAIT_CLICK\") {\n          if (this.globals.mouse.etatOn) {\n            var rect = this.globals.can.getBoundingClientRect();\n            var x = this.globals.mouse.x - rect.left;\n            var y = this.globals.mouse.y - rect.top;\n\n            if (y < this.transY) {\n              if ((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.isInButton)(x, y, stopButton)) {\n                var stop = new _stop__WEBPACK_IMPORTED_MODULE_4__.Stop(this.globals);\n                (0,_main__WEBPACK_IMPORTED_MODULE_3__.enter)(stop);\n              }\n            } else {\n              this.select(x - this.transX, y - this.transY);\n            }\n          } else {\n            var nbSelected = sprites.filter(function (s) {\n              return s.status === \"SELECTED\";\n            }).length;\n\n            if (nbSelected >= 2) {\n              this.startFireWork();\n            } else {\n              for (var _i2 = 0; _i2 < sprites.length; _i2++) {\n                var sprite = sprites[_i2];\n\n                if (sprite.status === \"SELECTED\") {\n                  sprite.status = \"IDLE\";\n                }\n              }\n            }\n          }\n\n          if (generate) {\n            this.generateNewSprites();\n            generate = false;\n          }\n        } else if (currentState === \"BOMBING\") {\n          for (var _i3 = explosions.length - 1; _i3 >= 0; _i3--) {\n            var explosion = explosions[_i3];\n            explosion.life -= dt;\n\n            var _t = 1 - explosion.life / explosion.maxLife;\n\n            var _x = explosion.path.getX(_t);\n\n            var _y = explosion.path.getY(_t);\n\n            var pos0 = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(explosion.x0, explosion.y0, this.csW, this.csH);\n            var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(_x, _y, this.csW, this.csH);\n\n            if (explosion.dirX === 1) {\n              for (var c = pos0.c + 1; c <= pos.c; c++) {\n                var _sprite = this.getSprite(pos.r, c);\n\n                if (_sprite && _sprite.status !== \"BOMBED\") {\n                  this.explosionExpand(_sprite, pos.r, c);\n                }\n              }\n            } else if (explosion.dirX === -1) {\n              for (var _c = pos0.c - 1; _c >= pos.c; _c--) {\n                var _sprite2 = this.getSprite(pos.r, _c);\n\n                if (_sprite2 && _sprite2.status !== \"BOMBED\") {\n                  this.explosionExpand(_sprite2, pos.r, _c);\n                }\n              }\n            }\n\n            if (explosion.dirY === 1) {\n              for (var r = pos0.r + 1; r <= pos.r; r++) {\n                var _sprite3 = this.getSprite(r, pos.c);\n\n                if (_sprite3 && _sprite3.status !== \"BOMBED\") {\n                  this.explosionExpand(_sprite3, r, pos.c);\n                }\n              }\n            } else if (explosion.dirY === -1) {\n              for (var _r = pos0.r - 1; _r >= pos.r; _r--) {\n                var _sprite4 = this.getSprite(_r, pos.c);\n\n                if (_sprite4 && _sprite4.status !== \"BOMBED\") {\n                  this.explosionExpand(_sprite4, _r, pos.c);\n                }\n              }\n            }\n\n            for (var j = 0; j < explosion.nbParticles; j++) {\n              var particleExplosion = new _core_firework__WEBPACK_IMPORTED_MODULE_1__.Particle(_x, _y, 5, 0.5, \"explosion\", [255, 165, 0, 1], Math.min(this.csW, this.csH));\n              particles.explosion.push(particleExplosion);\n            }\n\n            if (explosion.life <= 0) {\n              explosions.splice(_i3, 1);\n            }\n          }\n\n          if (explosions.length <= 0) {\n            bombedScoring.score = this.calculScore(bombedScoring.countAnimals);\n            scorings.push(bombedScoring);\n            this.checkEmptyCells();\n            currentState = \"FALL\";\n          }\n\n          camera.update();\n        } else if (currentState === \"EXPLODE\") {\n          this.explodeAnimation(dt);\n          camera.update();\n        } else if (currentState === \"FALL\") {\n          var nbFalling = sprites.filter(function (s) {\n            return s.status === \"FALLING\";\n          }).length;\n\n          if (nbFalling === 0) {\n            currentState = \"WAIT_CLICK\";\n          }\n        }\n      }\n    }\n  }, {\n    key: \"explosionExpand\",\n    value: function explosionExpand(sprite, r, c) {\n      var x = sprite.x + this.csW / 2;\n      var y = sprite.y + this.csH / 2;\n      sprite.status = \"BOMBED\";\n\n      if (sprite.bomb) {\n        this.createExplosions(sprite);\n      } else {\n        bombedScoring.countAnimals++;\n        var color = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.whiten)(colors[sprite.id], 0.3 + 0.3 * Math.random());\n        var firework = new _core_firework__WEBPACK_IMPORTED_MODULE_1__.Firework(x, y, 2, 2, null, 50, Math.min(this.csW, this.csH));\n        var nbParticles = 20 + Math.floor(Math.random() * 20);\n        var smoke = new _core_firework__WEBPACK_IMPORTED_MODULE_1__.Smoke(x, y, 10, 1, color, nbParticles, Math.min(this.csW, this.csH));\n        firework.create();\n        smoke.create();\n        particles.firework = particles.firework.concat(firework.particles);\n        particles.smoke = particles.smoke.concat(smoke.particles); //particles = particles.concat(firework.particles);\n        //particles = particles.concat(smoke.particles);\n\n        if (sprite.status !== \"NEW\") {\n          grid[r][c] = -1;\n          gridCheck[r][c] = 1;\n        }\n\n        sprites.splice(sprites.indexOf(sprite), 1);\n      }\n    }\n  }, {\n    key: \"startFireWork\",\n    value: function startFireWork() {\n      this.initGridCheck();\n      var totalR = 0;\n      var totalC = 0;\n      var count = 0;\n\n      for (var i = sprites.length - 1; i >= 0; i--) {\n        var sprite = sprites[i];\n\n        if (sprite.status === \"SELECTED\") {\n          var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(sprite.x, sprite.y, this.csW, this.csH);\n          grid[pos.r][pos.c] = -1;\n          gridCheck[pos.r][pos.c] = 1;\n          totalR += pos.r;\n          totalC += pos.c;\n          count++;\n          this.createFireworkSmoke(sprite);\n          sprites.splice(i, 1);\n        }\n      }\n\n      var score = this.calculScore(count);\n      var x0 = (Math.floor(totalC / count) + 0.5) * this.csW;\n      var y0 = (Math.floor(totalR / count) + 0.5) * this.csH;\n      var x2 = 7 * 14 * scaleFont;\n      var y2 = 0;\n      var bezier = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Bezier(x0, y0, Math.random() * this.nbCols * this.csW, Math.random() * this.nbRows * this.csH, x2, y2);\n      scorings.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Scoring(score, y0 / this.canH + 0.5, bezier));\n      currentState = \"EXPLODE\";\n      this.playSound();\n      camera.shake();\n    }\n  }, {\n    key: \"updateSprites\",\n    value: function updateSprites(dt) {\n      for (var i = 0; i < sprites.length; i++) {\n        var sprite = sprites[i];\n\n        if (sprite.bombMaxTime > 0 && sprite.status !== \"NEW\" && sprite.status !== \"SELECTED\") {\n          sprite.bombTimer -= dt;\n\n          if (!sprite.bomb && sprite.bombTimer < sprite.bombMaxTime / 2) {\n            sprite.bomb = true;\n            sprite.frameIndex = 0;\n            sprite.animationTimer = sprite.animationSpeed;\n          } else if (sprite.bomb && sprite.bombTimer < 0) {\n            sprite.bombMaxTime = 0;\n            sprite.bomb = false;\n            sprite.frameIndex = 0;\n            sprite.animationTimer = sprite.animationSpeed;\n          }\n        }\n\n        if (!sprite.bomb) {\n          if (sprite.status === \"SELECTED\") {\n            sprite.animationTimer -= 20 * dt;\n          } else {\n            sprite.animationTimer -= dt;\n          }\n\n          if (sprite.animationTimer <= 0) {\n            sprite.frameIndex++;\n            sprite.animationTimer = sprite.animationSpeed;\n\n            if (sprite.frameIndex >= sprite.quads.length) {\n              sprite.frameIndex = 0;\n            }\n          }\n        } else {\n          sprite.animationTimer -= dt;\n\n          if (sprite.animationTimer <= 0) {\n            sprite.frameIndex++;\n            sprite.animationTimer = sprite.animationSpeed;\n\n            if (sprite.frameIndex >= 2) {\n              sprite.frameIndex = 0;\n            }\n          }\n        }\n\n        if (sprite.status === \"NEW\" || sprite.status === \"FALLING\") {\n          if (sprite.status === \"NEW\") {\n            var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(sprite.x, sprite.y, this.csW, this.csH);\n            sprite.targetY = this.getTargetRow(pos.c) * this.csH;\n          }\n\n          sprite.y += sprite.vy * dt;\n\n          if (sprite.y >= sprite.targetY) {\n            sprite.y = sprite.targetY;\n            sprite.status = \"IDLE\";\n\n            var _pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(sprite.targetX, sprite.targetY, this.csW, this.csH);\n\n            grid[_pos.r][_pos.c] = sprite.id;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"generateNewSprites\",\n    value: function generateNewSprites() {\n      if (this.checkGameover()) {\n        currentState = \"GAME_OVER\";\n        this.globals.assets.bgMusic.pause();\n        this.globals.assets.deadSound.play();\n        highScore = Math.max(highScore, totalScore);\n        var fade = new _fadeEnd__WEBPACK_IMPORTED_MODULE_2__.FadeEnd(this.globals, \"gameover\");\n        (0,_main__WEBPACK_IMPORTED_MODULE_3__.enter)(fade);\n      } else {\n        var rand1 = Math.floor(Math.random() * this.nbCols);\n        var rand2 = Math.floor(Math.random() * this.nbCols);\n\n        while (rand2 === rand1) {\n          rand2 = Math.floor(Math.random() * this.nbCols);\n        }\n\n        var count1 = this.countEmptyPerCol(rand1);\n        var count2 = this.countEmptyPerCol(rand2);\n        var c = rand1;\n\n        if (count1 < count2) {\n          c = rand2;\n        }\n\n        var x = c * this.csW;\n        var y = -this.csH;\n        var id = this.newAnimalId(c);\n        var targetRow = this.getTargetRow(c);\n        var bombTimer = 0;\n\n        if (Math.random() < 0.3) {\n          bombTimer = 5 + Math.random() * 2;\n        }\n\n        sprites.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Sprite(x, y, id, \"NEW\", 200, targetRow * this.csH, bombTimer));\n        countAnimals++;\n        this.accelerate();\n      }\n    }\n  }, {\n    key: \"accelerate\",\n    value: function accelerate() {\n      if (countAnimals % 10 === 0) {\n        waitTimeGenerate = maxWaitTimeGenerate - 0.0025 * Math.min(countAnimals, 400);\n      }\n\n      if (countAnimals >= 100 && countAnimals < 300) {\n        nbAnimalTypes = 4;\n      } else if (countAnimals >= 300 && countAnimals < 600) {\n        nbAnimalTypes = 5;\n      } else if (countAnimals >= 600 && countAnimals < 800) {\n        nbAnimalTypes = 6;\n      } else if (countAnimals >= 800) {\n        nbAnimalTypes = 6;\n      }\n    }\n  }, {\n    key: \"checkGameover\",\n    value: function checkGameover() {\n      for (var c = 0; c < this.nbCols; c++) {\n        if (grid[0][c] !== -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"countEmptyPerCol\",\n    value: function countEmptyPerCol(c) {\n      var count = 0;\n\n      for (var r = 0; r < this.nbRows; r++) {\n        if (grid[r][c] < 0) {\n          count++;\n        }\n      }\n\n      return count;\n    }\n  }, {\n    key: \"newAnimalId\",\n    value: function newAnimalId(c) {\n      var id = Math.floor(Math.random() * nbAnimalTypes);\n\n      for (var r = 1; r < this.nbRows - 1; r++) {\n        var id1 = grid[r][c];\n\n        if (id1 >= 0) {\n          if (Math.random() > 0.7) {\n            id = id1;\n          }\n\n          break;\n        }\n      }\n\n      return id;\n    }\n  }, {\n    key: \"explodeAnimation\",\n    value: function explodeAnimation(dt) {\n      timerExplode -= dt;\n\n      if (timerExplode <= 0) {\n        timerExplode = durationExplode;\n        this.checkEmptyCells();\n        currentState = \"FALL\";\n      }\n    }\n  }, {\n    key: \"checkEmptyCells\",\n    value: function checkEmptyCells() {\n      for (var i = 0; i < sprites.length; i++) {\n        var sprite = sprites[i];\n\n        if (sprite.status !== \"NEW\") {\n          var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(sprite.x, sprite.y, this.csW, this.csH);\n          var nb = 0;\n\n          for (var _i4 = pos.r + 1; _i4 < this.nbRows; _i4++) {\n            nb += gridCheck[_i4][pos.c];\n          }\n\n          if (nb > 0) {\n            sprite.vy = nb * this.csH / durationFall;\n            sprite.targetY = sprite.y + nb * this.csH;\n            sprite.status = \"FALLING\";\n            grid[pos.r][pos.c] = -1;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"calculScore\",\n    value: function calculScore(nb) {\n      return (nbAnimalTypes - 2) * nb * nb;\n    }\n  }, {\n    key: \"playSound\",\n    value: function playSound() {\n      var idSound = Math.floor(Math.random() * this.globals.assets.scoringSounds.length);\n      this.globals.assets.scoringSounds[idSound].play();\n    }\n  }, {\n    key: \"getTargetRow\",\n    value: function getTargetRow(c) {\n      for (var r = 0; r < this.nbRows - 1; r++) {\n        var id = grid[r][c];\n\n        if (id < 0) {\n          if (grid[r + 1][c] >= 0) {\n            return r;\n          }\n        }\n      }\n\n      return this.nbRows - 1;\n    }\n  }, {\n    key: \"getSprite\",\n    value: function getSprite(r, c) {\n      for (var i = 0; i < sprites.length; i++) {\n        var sprite = sprites[i];\n        var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(sprite.x, sprite.y, this.csW, this.csH);\n\n        if (pos.r === r && pos.c === c) {\n          return sprite;\n        }\n      }\n\n      return;\n    }\n  }, {\n    key: \"createExplosions\",\n    value: function createExplosions(sprite) {\n      var x0 = sprite.x + this.csW / 2;\n      var y0 = sprite.y + this.csH / 2;\n      var x2, y2, dirX, dirY;\n\n      for (var i = 0; i < 4; i++) {\n        if (i === 0) {\n          dirX = 0;\n          dirY = -1;\n          x2 = x0;\n          y2 = 0;\n        } else if (i === 1) {\n          dirX = 1;\n          dirY = 0;\n          x2 = this.nbCols * this.csW - this.csW / 2;\n          y2 = y0;\n        } else if (i === 2) {\n          dirX = 0;\n          dirY = 1;\n          x2 = x0;\n          y2 = this.nbRows * this.csH - this.csH / 2;\n        } else if (i === 3) {\n          dirX = -1;\n          dirY = 0;\n          x2 = 0;\n          y2 = y0;\n        }\n\n        var bezier = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Bezier(x0, y0, (x0 + x2) / 2, (y0 + y2) / 2, x2, y2);\n        var maxLife = Math.max(Math.abs(x0 - x2), Math.abs(y0 - y2)) / Math.max(this.canW, this.canH);\n        var explosion = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Explosion(maxLife, x0, y0, dirX, dirY, bezier, 1);\n        var rCircle = Math.floor(this.scaleImage / 4);\n        console.log(this.scaleImage);\n        console.log(rCircle);\n\n        for (var j = 0; j < explosion.nbParticles; j++) {\n          var particleExplosion = new _core_firework__WEBPACK_IMPORTED_MODULE_1__.Particle(sprite.x + this.csW / 2, sprite.y + this.csH / 2, rCircle, 0.3, \"explosion\", [255, 165, 0, 1], Math.min(this.csW, this.csH));\n          particles.explosion.push(particleExplosion);\n        }\n\n        explosions.push(explosion);\n      }\n\n      var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(sprite.x, sprite.y, this.csW, this.csH);\n      grid[pos.r][pos.c] = -1;\n      gridCheck[pos.r][pos.c] = 1;\n      sprites.splice(sprites.indexOf(sprite), 1);\n    }\n  }, {\n    key: \"createFireworkSmoke\",\n    value: function createFireworkSmoke(sprite) {\n      var x = sprite.x + this.csW / 2;\n      var y = sprite.y + this.csH / 2;\n      var color = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.whiten)(colors[sprite.id], 0.3 + 0.3 * Math.random());\n      var firework = new _core_firework__WEBPACK_IMPORTED_MODULE_1__.Firework(x, y, 2, 2, null, 50, Math.min(this.csW, this.csH));\n      var nbParticles = 20 + Math.floor(Math.random() * 20);\n      var smoke = new _core_firework__WEBPACK_IMPORTED_MODULE_1__.Smoke(x, y, 10, 1, color, nbParticles, Math.min(this.csW, this.csH));\n      firework.create();\n      smoke.create();\n      particles.firework = particles.firework.concat(firework.particles);\n      particles.smoke = particles.smoke.concat(smoke.particles);\n    }\n  }, {\n    key: \"selectedAnimals\",\n    value: function selectedAnimals() {\n      for (var i = sprites.length - 1; i >= 0; i--) {\n        var sprite = sprites[i];\n\n        if (sprite.status === \"SELECTED\") {\n          var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(sprite.x, sprite.y, this.csW, this.csH);\n          grid[pos.r][pos.c] = -1;\n          gridCheck[pos.r][pos.c] = 1;\n          this.createFireworkSmoke(sprite);\n          sprites.splice(i, 1);\n        }\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(x, y) {\n      var pos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(x, y, this.csW, this.csH);\n      var sprite = this.getSprite(pos.r, pos.c);\n      var nbSelected = sprites.filter(function (s) {\n        return s.status === \"SELECTED\";\n      }).length;\n\n      if (sprite && sprite.status !== \"NEW\") {\n        if (sprite.status === \"SELECTED\") {\n          lastSelectedSprite = sprite;\n        } else {\n          if (sprite.bomb) {\n            this.initGridCheck();\n            this.selectedAnimals();\n            sprite.status = \"BOMBED\";\n            var x0 = sprite.x + this.csW / 2;\n            var y0 = sprite.y + this.csH / 2;\n            var bezier = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Bezier(x0, y0, Math.random() * this.nbCols * this.csW, Math.random() * this.nbRows * this.csH, 7 * 14 * scaleFont, 0);\n            bombedScoring = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Scoring(0, y0 / this.canH + 0.5, bezier);\n            bombedScoring.countAnimals = nbSelected;\n            this.createExplosions(sprite);\n            this.globals.assets.expSound.play();\n            this.globals.mouse.etatOn = false;\n            camera.shake();\n            currentState = \"BOMBING\";\n          } else {\n            if (nbSelected === 0) {\n              sprite.status = \"SELECTED\";\n              lastSelectedSprite = sprite;\n              (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.playAudioBuffer)(this.globals.audioCtx, this.globals.assets.audioBuffers[sprite.id], nbSelected);\n            } else {\n              var lastPos = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.coordToPos)(lastSelectedSprite.x, lastSelectedSprite.y, this.csW, this.csH);\n\n              if ((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.isRCValidFourDirs)(pos.r, pos.c, lastPos.r, lastPos.c)) {\n                if (sprite.id === lastSelectedSprite.id) {\n                  sprite.status = \"SELECTED\";\n                  lastSelectedSprite = sprite;\n                  (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.playAudioBuffer)(this.globals.audioCtx, this.globals.assets.audioBuffers[sprite.id], nbSelected);\n                } else {\n                  this.globals.mouse.etatOn = false;\n                }\n              } else {\n                this.globals.mouse.etatOn = false;\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.save();\n      this.ctx.translate(camera.x, camera.y);\n      this.ctx.save();\n      this.ctx.translate(this.transX, this.transY);\n      this.ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n      this.ctx.fillRect(0, 0, this.nbCols * this.csW, this.nbRows * this.csH);\n      this.ctx.globalAlpha = 0.5;\n      this.ctx.drawImage(this.globals.assets.imgBG, 0, 0, this.nbCols * this.csW, this.nbRows * this.csH);\n      this.ctx.globalAlpha = 1;\n      this.drawSprites();\n      (0,_core_firework__WEBPACK_IMPORTED_MODULE_1__.drawParticles)(this.ctx, particles, Math.floor(this.scaleImage / 8));\n      this.drawScorings(); //this.drawGrid();\n\n      this.ctx.restore();\n      var rect = this.globals.can.getBoundingClientRect();\n\n      if (this.globals.mouse.etatOn) {\n        this.ctx.fillStyle = \"rgba(0,0,255, 0.5)\";\n        this.ctx.beginPath();\n        this.ctx.arc(this.globals.mouse.x - rect.left, this.globals.mouse.y - rect.top, this.scaleImage / 2 + 5, 0, 2 * Math.PI);\n        this.ctx.fill();\n      }\n\n      this.ctx.restore();\n      this.drawBG();\n      var newScaleFont = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawScore)(this.ctx, this.globals.assets.imgFont_blue, totalScore, 0, 0, this.canW - stopButton.w - 40, this.transY, scaleFont);\n      stopButton.scale = newScaleFont;\n      stopButton.w = stopButton.img.width * stopButton.scale;\n      stopButton.h = stopButton.img.height * stopButton.scale;\n      stopButton.x = this.canW - stopButton.w - 20;\n      stopButton.y = this.transY / 2 - stopButton.h / 2;\n      stopButton.draw(this.ctx);\n    }\n  }, {\n    key: \"drawScorings\",\n    value: function drawScorings() {\n      var font;\n\n      if (this.scaleTitle >= 3) {\n        font = \"48px Arial\";\n      } else if (this.scaleTitle >= 2) {\n        font = \"36px Arial\";\n      } else if (this.scaleTitle >= 1) {\n        font = \"24px Arial\";\n      } else {\n        font = \"12px Arial\";\n      }\n\n      this.ctx.font = font;\n\n      for (var i = 0; i < scorings.length; i++) {\n        var scoring = scorings[i];\n        var text = \"+\" + scoring.score;\n        var w = this.ctx.measureText(text).width;\n        var h = this.ctx.measureText(\"M\").width;\n        var x = scoring.path.getX(1 - scoring.life / scoring.maxLife) - w / 2;\n        var y = scoring.path.getY(1 - scoring.life / scoring.maxLife) - w / 2 + (w + h) / 2;\n        (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], font, x - 3, y, w, h);\n        (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], font, x, y - 3, w, h);\n        (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], font, x + 3, y, w, h);\n        (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [0, 0, 0], font, x, y + 3, w, h);\n        (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawText)(this.ctx, text, \"CENTER\", [255, 200, 0], font, x, y, w, h);\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      this.ctx.font = \"16px Arial\";\n      this.ctx.fillStyle = \"black\";\n\n      for (var r = 0; r < this.nbRows; r++) {\n        for (var c = 0; c < this.nbCols; c++) {\n          this.ctx.fillText(grid[r][c], c * this.csW, r * this.csH + 20);\n        }\n      }\n    }\n  }, {\n    key: \"drawSprites\",\n    value: function drawSprites() {\n      for (var i = 0; i < sprites.length; i++) {\n        var sprite = sprites[i];\n        this.ctx.imageSmoothingEnabled = false;\n\n        if (sprite.status === \"SELECTED\") {\n          if (!sprite.bomb) {\n            this.ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n            this.ctx.fillRect(sprite.x - 2, sprite.y - 2 + 1 / 8 * this.csH, this.csW + 4, this.csH + 4);\n          }\n        }\n      }\n\n      for (var _i5 = 0; _i5 < sprites.length; _i5++) {\n        var _sprite5 = sprites[_i5];\n        this.ctx.imageSmoothingEnabled = false;\n\n        if (_sprite5.status === \"SELECTED\") {\n          if (!_sprite5.bomb) {\n            this.ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n            this.ctx.fillRect(_sprite5.x, _sprite5.y + 1 / 8 * this.csH, this.csW, this.csH);\n          }\n        }\n\n        var x = Math.floor(_sprite5.x + (this.csW - this.scaleImage) / 2);\n        var y = Math.floor(_sprite5.y + (this.csH - this.scaleImage) / 2);\n\n        if (_sprite5.status === \"NEW\") {\n          this.ctx.imageSmoothingEnabled = false;\n          var img = this.globals.assets.imgUmbrella;\n          this.ctx.drawImage(img, 0, 0, img.width, img.height, x, Math.floor(y - this.scaleImage * 0.4), this.scaleImage, this.scaleImage);\n        }\n\n        if (_sprite5.bomb) {\n          var _img = this.globals.assets.imgBombs[_sprite5.frameIndex];\n          this.ctx.drawImage(_img, x, y, this.scaleImage, this.scaleImage);\n        } else {\n          var quad = _sprite5.quads[_sprite5.frameIndex];\n          var _img2 = this.globals.assets.imgAnimals[_sprite5.id];\n          this.ctx.drawImage(_img2, quad.x, quad.y, quad.w, quad.h, x, y, this.scaleImage, this.scaleImage);\n        } // this.ctx.fillStyle = \"white\"; \n        // this.ctx.fillText(sprite.status, sprite.x, sprite.y + 20);\n\n      }\n    }\n  }, {\n    key: \"drawBG\",\n    value: function drawBG() {\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fillRect(0, 0, this.canW, this.transY);\n      this.ctx.fillRect(0, 0, this.transX, this.canH);\n      this.ctx.fillRect(this.transX + this.nbCols * this.csW, 0, this.canW - this.transX - this.nbCols * this.csW, this.canH); // fait attention à des arrondis.\n\n      this.ctx.fillRect(0, this.transY + this.nbRows * this.csH, this.canW, this.canH - this.transY - this.nbRows * this.csH); // drawText(this.ctx, `FPS: ${Math.floor(FPS)}; nbp (F, SM, S,  E,): ${particles.firework.length}, ${particles.smoke.length}, ${particles.scoring.length}, ${particles.explosion.length}`,\n      //  \"CENTER\", [255, 255, 255], \"20px Arial\",  0,  this.transY + this.nbRows * this.csH, this.canW, this.canH - this.transY - this.nbRows * this.csH);\n    }\n  }]);\n\n  return Game;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/game.js?");

/***/ }),

/***/ "./src/main/gameover.js":
/*!******************************!*\
  !*** ./src/main/gameover.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gameover\": () => (/* binding */ Gameover)\n/* harmony export */ });\n/* harmony import */ var _core_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/tool */ \"./src/core/tool.js\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main */ \"./src/main/main.js\");\n/* harmony import */ var _fadeEnd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fadeEnd */ \"./src/main/fadeEnd.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar waitTimeGenerate = 3;\nvar sprites, playButton, timerGenerate, clouds;\nvar cloudQuads = [];\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(0, 0, 2048, 1256));\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(2048, 0, 2048, 1256));\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(0, 1256, 2048, 1256));\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(2048, 1256, 2048, 1256));\nvar Gameover = /*#__PURE__*/function () {\n  function Gameover(globals) {\n    _classCallCheck(this, Gameover);\n\n    this.globals = globals;\n    this.name = \"gameover\";\n    this.ctx = globals.can.getContext(\"2d\");\n    this.scaleImage = Math.min(globals.config.csW, globals.config.csH);\n    this.config = globals.config;\n  }\n\n  _createClass(Gameover, [{\n    key: \"init\",\n    value: function init() {\n      sprites = [];\n      timerGenerate = waitTimeGenerate;\n      playButton = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Button(this.globals.assets.imgFont, \"RETRY\", 0, this.globals.can.height / 2, this.globals.can.width, 100, 3, [255, 0, 0, 0.7]);\n\n      for (var i = 0; i < 5; i++) {\n        var x = Math.floor(Math.random() * this.globals.config.nbCols * this.globals.config.csW);\n        var y = Math.floor(Math.random() * this.globals.config.nbRows * this.globals.config.csH);\n        var id = Math.floor(Math.random() * this.globals.assets.imgAnimals.length);\n        this.generateNewSprite(x, y, id);\n      }\n\n      this.initClouds();\n    }\n  }, {\n    key: \"initClouds\",\n    value: function initClouds() {\n      clouds = [];\n\n      for (var i = 0; i < 7; i++) {\n        //const dir = Math.random() > 0.5 ?  1: -1;\n        var dir = 1;\n        var id = Math.floor(Math.random() * 4);\n        var cloud = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Cloud(id, Math.random() * this.globals.can.width, Math.random() * this.globals.can.height, 64, 40, dir * (10 + 20 * Math.random()), 0);\n        clouds.push(cloud);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (this.globals.mouse.etatOn) {\n        this.play();\n      }\n\n      this.updateSprites(dt);\n      this.updateClouds(dt);\n      timerGenerate -= dt;\n\n      if (timerGenerate <= 0) {\n        timerGenerate = waitTimeGenerate;\n        var c = Math.floor(Math.random() * this.globals.config.nbCols);\n        var x = c * this.globals.config.csW;\n        var y = -this.globals.config.csH;\n        var id = Math.floor(Math.random() * this.globals.assets.imgAnimals.length);\n        this.generateNewSprite(x, y, id);\n      }\n    }\n  }, {\n    key: \"generateNewSprite\",\n    value: function generateNewSprite(x, y, id) {\n      sprites.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Sprite(x, y, id, \"NEW\", 80, this.globals.can.height, 0));\n    }\n  }, {\n    key: \"updateSprites\",\n    value: function updateSprites(dt) {\n      for (var i = sprites.length - 1; i >= 0; i--) {\n        var sprite = sprites[i];\n        sprite.animationTimer -= dt;\n\n        if (sprite.animationTimer <= 0) {\n          sprite.frameIndex++;\n          sprite.animationTimer = sprite.animationSpeed;\n\n          if (sprite.frameIndex >= sprite.quads.length) {\n            sprite.frameIndex = 0;\n          }\n        }\n\n        sprite.y += sprite.vy * dt;\n\n        if (sprite.y >= sprite.targetY) {\n          sprites.splice(i, 1);\n        }\n      }\n    }\n  }, {\n    key: \"updateClouds\",\n    value: function updateClouds(dt) {\n      for (var i = 0; i < clouds.length; i++) {\n        var cloud = clouds[i];\n        cloud.x += cloud.vx * dt;\n\n        if (cloud.x > this.globals.can.width) {\n          cloud.x = -cloud.w * this.scaleImage / 16;\n        } else if (cloud.x < -cloud.w * this.scaleImage / 16) {\n          cloud.x = this.globals.can.width;\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.fillStyle = \"rgba(110, 197, 230, 1)\";\n      this.ctx.fillRect(0, 0, this.globals.can.width, this.globals.can.height);\n      this.drawClouds();\n      this.drawSprites();\n      this.config.scaleTitle = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"GAME\", this.globals.assets.imgFont, 0, this.globals.can.height / 6, this.globals.can.width, this.globals.can.height * 1.5 / 6, this.config.scaleTitle);\n      (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"OVER\", this.globals.assets.imgFont, 0, this.globals.can.height * 1.5 / 6, this.globals.can.width, this.globals.can.height / 3, this.config.scaleTitle);\n      playButton.scale = this.config.scaleTitle;\n      playButton.draw(this.ctx);\n    }\n  }, {\n    key: \"drawSprites\",\n    value: function drawSprites() {\n      for (var i = 0; i < sprites.length; i++) {\n        var sprite = sprites[i];\n        this.ctx.imageSmoothingEnabled = false;\n        var x = Math.floor(sprite.x + (this.globals.config.csW - this.scaleImage) / 2);\n        var y = Math.floor(sprite.y + (this.globals.config.csH - this.scaleImage) / 2);\n\n        if (sprite.status === \"NEW\") {\n          this.ctx.imageSmoothingEnabled = false;\n          var _img = this.globals.assets.imgUmbrella;\n          this.ctx.drawImage(_img, 0, 0, _img.width, _img.height, x, Math.floor(y - this.scaleImage * 0.4), this.scaleImage, this.scaleImage);\n        }\n\n        var quad = sprite.quads[sprite.frameIndex];\n        var img = this.globals.assets.imgAnimals[sprite.id];\n        this.ctx.drawImage(img, quad.x, quad.y, quad.w, quad.h, x, y, this.scaleImage, this.scaleImage);\n      }\n    }\n  }, {\n    key: \"drawClouds\",\n    value: function drawClouds() {\n      for (var i = 0; i < clouds.length; i++) {\n        var cloud = clouds[i];\n        var quad = cloudQuads[cloud.id]; //this.ctx.imageSmoothingEnabled = false;\n\n        this.ctx.drawImage(this.globals.assets.imgClouds, quad.x, quad.y, quad.w, quad.h, cloud.x, cloud.y, cloud.w * this.scaleImage / 16, cloud.h * this.scaleImage / 16);\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var rect = this.globals.can.getBoundingClientRect();\n      var x = this.globals.mouse.x - rect.left;\n      var y = this.globals.mouse.y - rect.top;\n\n      if ((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.isInButton)(x, y, playButton)) {\n        this.globals.mouse.etatOn = false;\n        this.globals.assets.endMusic.pause();\n        var fade = new _fadeEnd__WEBPACK_IMPORTED_MODULE_2__.FadeEnd(this.globals, \"game\");\n        (0,_main__WEBPACK_IMPORTED_MODULE_1__.enter)(fade);\n      }\n    }\n  }]);\n\n  return Gameover;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/gameover.js?");

/***/ }),

/***/ "./src/main/loader.js":
/*!****************************!*\
  !*** ./src/main/loader.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Load\": () => (/* binding */ Load)\n/* harmony export */ });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/main/main.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar Load = /*#__PURE__*/function () {\n  function Load(audioCtx, assets, nbAssets) {\n    _classCallCheck(this, Load);\n\n    this.audioCtx = audioCtx;\n    this.assets = assets;\n    this.nbAssets = nbAssets;\n  }\n\n  _createClass(Load, [{\n    key: \"loader\",\n    value: function loader() {\n      this.loadImages();\n      this.loadSounds();\n      this.loadAudioBuffers();\n    }\n  }, {\n    key: \"loadImages\",\n    value: function loadImages() {\n      for (var i = 0; i < this.assets.imgAnimals.length; i++) {\n        var src = \"images/img\" + i + \".png\";\n        this.assets.imgAnimals[i] = this.loadImage(src);\n      }\n\n      this.assets.imgBombs[0] = this.loadImage(\"images/imgBomb0.png\");\n      this.assets.imgBombs[1] = this.loadImage(\"images/imgBomb1.png\");\n      this.assets.imgBG = this.loadImage(\"images/imgBG.png\");\n      this.assets.imgUmbrella = this.loadImage(\"images/imgUmbrella.png\");\n      this.assets.imgFont = this.loadImage(\"images/imgFont.png\");\n      this.assets.imgFont_blue = this.loadImage(\"images/imgFont_blue.png\");\n      this.assets.imgStop = this.loadImage(\"images/imgStop.png\");\n      this.assets.imgPlay = this.loadImage(\"images/imgPlay.png\");\n      this.assets.imgClouds = this.loadImage(\"images/imgClouds.png\");\n    }\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(src) {\n      var img = new Image();\n      img.src = src;\n      img.onload = this.counter();\n      return img;\n    }\n  }, {\n    key: \"loadSounds\",\n    value: function loadSounds() {\n      for (var i = 0; i < this.assets.scoringSounds.length; i++) {\n        var src = \"sounds/scoring\" + i + \".wav\";\n        this.assets.scoringSounds[i] = this.loadSound(src);\n      }\n\n      this.assets.deadSound = this.loadSound(\"sounds/dead.wav\");\n      this.assets.expSound = this.loadSound(\"sounds/explosion.wav\");\n      this.assets.bgMusic = this.loadSound(\"sounds/music.mp3\");\n      this.assets.bgMusic.loop = true;\n      this.assets.bgMusic.volume = 0.3;\n      this.assets.endMusic = this.loadSound(\"sounds/endMusic.mp3\");\n    }\n  }, {\n    key: \"loadSound\",\n    value: function loadSound(src) {\n      var sound = new Audio();\n      sound.src = src;\n      sound.addEventListener('canplaythrough', this.counter(), false);\n      return sound;\n    }\n  }, {\n    key: \"loadAudioBuffers\",\n    value: function loadAudioBuffers() {\n      for (var i = 0; i < this.assets.audioBuffers.length; i++) {\n        this.loadAudioBuffer(this.audioCtx, this.assets.audioBuffers, i, \".wav\");\n      }\n    }\n  }, {\n    key: \"loadAudioBuffer\",\n    value: function loadAudioBuffer(ctx, lst, num, ext) {\n      var _this = this;\n\n      var xhr = new XMLHttpRequest();\n      var url = \"./sounds/sound\" + num + ext;\n      xhr.open(\"GET\", url);\n      xhr.responseType = \"arraybuffer\";\n\n      xhr.onload = function () {\n        ctx.decodeAudioData(xhr.response, function (buffer) {\n          lst[num] = buffer;\n\n          _this.counter();\n        }, function (e) {\n          alert(\"Error with decoding audio data !\" + e.err);\n        });\n      };\n\n      xhr.send();\n    }\n  }, {\n    key: \"counter\",\n    value: function counter() {\n      this.nbAssets--;\n\n      if (this.nbAssets === 0) {\n        requestAnimationFrame(_main__WEBPACK_IMPORTED_MODULE_0__.gameLoop);\n      }\n    }\n  }]);\n\n  return Load;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/loader.js?");

/***/ }),

/***/ "./src/main/main.js":
/*!**************************!*\
  !*** ./src/main/main.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"enter\": () => (/* binding */ enter),\n/* harmony export */   \"gameLoop\": () => (/* binding */ gameLoop),\n/* harmony export */   \"Main\": () => (/* binding */ Main)\n/* harmony export */ });\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./menu */ \"./src/main/menu.js\");\n/* harmony import */ var _loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loader */ \"./src/main/loader.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar nbAnimalImages = 7;\nvar nbScoringSounds = 5;\nvar nbBombImages = 2;\nvar nbRows = 14;\nvar nbCols = 8;\nvar transX = 0;\nvar transY = 48;\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\nvar nbAssets = nbAnimalImages + nbBombImages + nbScoringSounds + 11 + nbAnimalImages;\nvar oldTime = 0;\nvar globals = {\n  scenes: [],\n  can: document.querySelector(\"canvas\"),\n  mouse: {\n    etatOn: false,\n    x: 0,\n    y: 0\n  },\n  assets: {\n    imgAnimals: new Array(nbAnimalImages),\n    imgBombs: new Array(nbBombImages),\n    imgBG: null,\n    imgUmbrella: null,\n    imgFont: null,\n    imgFont_blue: null,\n    imgStop: null,\n    imgPlay: null,\n    imgclouds: null,\n    scoringSounds: new Array(nbScoringSounds),\n    bgMusic: null,\n    endMusic: null,\n    deadSound: null,\n    expSound: null,\n    audioBuffers: new Array(nbAnimalImages)\n  },\n  config: {\n    nbRows: nbRows,\n    nbCols: nbCols,\n    transX: transX,\n    transY: transY,\n    csW: 0,\n    csH: 0,\n    scaleTitle: 3\n  },\n  audioCtx: new AudioContext(),\n  time: 0\n};\nglobals.can.width = document.body.clientWidth;\nglobals.can.height = document.body.clientHeight;\n\nif (!window.cordova) {\n  if (globals.can.width > 600) {\n    globals.can.width = 600;\n  }\n\n  if (globals.can.height > 1000) {\n    globals.can.height = 1000;\n  }\n}\n\nvar gapB = 0;\nglobals.config.csW = Math.floor((globals.can.width - 2 * globals.config.transX) / globals.config.nbCols);\nglobals.config.csH = Math.floor((globals.can.height - gapB - globals.config.transY) / globals.config.nbRows);\nglobals.config.transX = Math.floor((globals.can.width - globals.config.csW * globals.config.nbCols) / 2);\nglobals.config.transY = globals.can.height - gapB - globals.config.csH * globals.config.nbRows; //console.log(\"after : \", globals.config.transY, globals.config.csH);\n//console.log(globals.config.transX, globals.can.width, globals.config.nbCols * globals.config.csW, globals.can.width - globals.config.transX - globals.config.nbCols *  globals.config.csW);\n\nvar touch = function touch(e) {\n  globals.mouse.x = e.touches[0].clientX;\n  globals.mouse.y = e.touches[0].clientY;\n};\n\nvar mouse = function mouse(e) {\n  globals.mouse.x = e.clientX;\n  globals.mouse.y = e.clientY;\n};\n\nglobals.can.addEventListener(\"touchstart\", function (e) {\n  globals.mouse.etatOn = true;\n  touch(e);\n}, false);\nglobals.can.addEventListener(\"touchmove\", function (e) {\n  touch(e);\n}, false);\nglobals.can.addEventListener(\"touchend\", function (e) {\n  globals.mouse.etatOn = false;\n}, false);\nglobals.can.addEventListener(\"mousedown\", function (e) {\n  globals.mouse.etatOn = true;\n  mouse(e);\n});\nglobals.can.addEventListener(\"mousemove\", function (e) {\n  mouse(e);\n});\nglobals.can.addEventListener(\"mouseup\", function (e) {\n  globals.mouse.etatOn = false;\n});\nvar enter = function enter(s) {\n  globals.scenes.push(s);\n  s.init();\n};\nvar gameLoop = function gameLoop(time) {\n  globals.time = time;\n\n  if (oldTime === 0) {\n    var menu = new _menu__WEBPACK_IMPORTED_MODULE_0__.Menu(globals);\n    enter(menu);\n  }\n\n  var dt = (time - oldTime) / 1000;\n\n  if (dt < 0.1) {\n    globals.scenes[globals.scenes.length - 1].update(dt);\n  }\n\n  var ctx = globals.can.getContext(\"2d\");\n  ctx.clearRect(0, 0, globals.can.width, globals.can.height);\n\n  for (var i = 0; i < globals.scenes.length; i++) {\n    var scene = globals.scenes[i];\n    scene.draw();\n  }\n\n  oldTime = time;\n  requestAnimationFrame(gameLoop);\n};\nvar Main = /*#__PURE__*/function () {\n  function Main() {\n    _classCallCheck(this, Main);\n  }\n\n  _createClass(Main, [{\n    key: \"start\",\n    value: function start() {\n      var load = new _loader__WEBPACK_IMPORTED_MODULE_1__.Load(globals.audioCtx, globals.assets, nbAssets);\n      load.loader();\n    }\n  }]);\n\n  return Main;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/main.js?");

/***/ }),

/***/ "./src/main/menu.js":
/*!**************************!*\
  !*** ./src/main/menu.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Menu\": () => (/* binding */ Menu)\n/* harmony export */ });\n/* harmony import */ var _core_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/tool */ \"./src/core/tool.js\");\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main */ \"./src/main/main.js\");\n/* harmony import */ var _fadeStart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fadeStart */ \"./src/main/fadeStart.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\nvar waitTimeGenerate = 3;\nvar sprites, playButton, timerGenerate, clouds;\nvar cloudQuads = [];\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(0, 0, 2048, 1256));\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(2048, 0, 2048, 1256));\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(0, 1256, 2048, 1256));\ncloudQuads.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Quad(2048, 1256, 2048, 1256));\nvar countFrames;\nvar Menu = /*#__PURE__*/function () {\n  function Menu(globals) {\n    _classCallCheck(this, Menu);\n\n    this.globals = globals;\n    this.name = \"menu\";\n    this.ctx = globals.can.getContext(\"2d\");\n    this.scaleImage = Math.min(globals.config.csW, globals.config.csH);\n    this.config = globals.config;\n  }\n\n  _createClass(Menu, [{\n    key: \"init\",\n    value: function init() {\n      countFrames = -1;\n      sprites = [];\n      timerGenerate = waitTimeGenerate; //playButton = new Button((this.globals.can.width-120)/2, this.globals.can.height - 100, 120, 50, [255, 153, 0], 40, \"PLAY\", [255, 255, 255], \"24px Arial\");\n\n      playButton = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Button(this.globals.assets.imgFont, \"PLAY\", 0, this.globals.can.height / 2, this.globals.can.width, 100, this.config.scaleTitle, [255, 153, 0, 0.7]);\n      this.generateNewSprite(this.globals.config.csW, this.globals.config.csH, 2);\n      this.generateNewSprite(3 * this.globals.config.csW, 5 * this.globals.config.csH, 0);\n      this.generateNewSprite(4 * this.globals.config.csW, 7 * this.globals.config.csH, 6);\n      this.generateNewSprite(5 * this.globals.config.csW, 4 * this.globals.config.csH, 1);\n      this.generateNewSprite(7 * this.globals.config.csW, 2 * this.globals.config.csH, 4);\n      this.initClouds();\n    }\n  }, {\n    key: \"initClouds\",\n    value: function initClouds() {\n      clouds = [];\n\n      for (var i = 0; i < 7; i++) {\n        //const dir = Math.random() > 0.5 ?  1: -1;\n        var dir = 1;\n        var id = Math.floor(Math.random() * 4);\n        var cloud = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Cloud(id, Math.random() * this.globals.can.width, Math.random() * this.globals.can.height, 64, 40, dir * (10 + 20 * Math.random()), 0);\n        clouds.push(cloud);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (this.globals.mouse.etatOn) {\n        this.play();\n      }\n\n      this.updateSprites(dt);\n      this.updateClouds(dt);\n      this.updatePlayAudio();\n      timerGenerate -= dt;\n\n      if (timerGenerate <= 0) {\n        timerGenerate = waitTimeGenerate;\n        var c = Math.floor(Math.random() * this.globals.config.nbCols);\n        var x = c * this.globals.config.csW;\n        var y = -this.globals.config.csH;\n        var id = Math.floor(Math.random() * this.globals.assets.imgAnimals.length);\n        this.generateNewSprite(x, y, id);\n      }\n    }\n  }, {\n    key: \"updatePlayAudio\",\n    value: function updatePlayAudio() {\n      if (countFrames < 120) {\n        countFrames++;\n\n        if (countFrames === 0) {\n          (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.playAudioBuffer)(this.globals.audioCtx, this.globals.assets.audioBuffers[2], 0);\n        } else if (countFrames === 30) {\n          (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.playAudioBuffer)(this.globals.audioCtx, this.globals.assets.audioBuffers[0], 0);\n        } else if (countFrames === 60) {\n          (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.playAudioBuffer)(this.globals.audioCtx, this.globals.assets.audioBuffers[6], 0);\n        } else if (countFrames === 90) {\n          (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.playAudioBuffer)(this.globals.audioCtx, this.globals.assets.audioBuffers[1], 0);\n        } else if (countFrames === 120) {\n          (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.playAudioBuffer)(this.globals.audioCtx, this.globals.assets.audioBuffers[4], 0);\n        }\n      }\n    }\n  }, {\n    key: \"generateNewSprite\",\n    value: function generateNewSprite(x, y, id) {\n      sprites.push(new _core_tool__WEBPACK_IMPORTED_MODULE_0__.Sprite(x, y, id, \"NEW\", 80, this.globals.can.height, 0)); //playAudioBuffer(this.globals.audioCtx, this.globals.assets.audioBuffers[id], 0);\n    }\n  }, {\n    key: \"updateClouds\",\n    value: function updateClouds(dt) {\n      for (var i = 0; i < clouds.length; i++) {\n        var cloud = clouds[i];\n        cloud.x += cloud.vx * dt;\n\n        if (cloud.x > this.globals.can.width) {\n          cloud.x = -cloud.w * this.scaleImage / 16;\n        } else if (cloud.x < -cloud.w * this.scaleImage / 16) {\n          cloud.x = this.globals.can.width;\n        }\n      }\n    }\n  }, {\n    key: \"updateSprites\",\n    value: function updateSprites(dt) {\n      for (var i = sprites.length - 1; i >= 0; i--) {\n        var sprite = sprites[i];\n        sprite.animationTimer -= dt;\n\n        if (sprite.animationTimer <= 0) {\n          sprite.frameIndex++;\n          sprite.animationTimer = sprite.animationSpeed;\n\n          if (sprite.frameIndex >= sprite.quads.length) {\n            sprite.frameIndex = 0;\n          }\n        }\n\n        sprite.y += sprite.vy * dt;\n\n        if (sprite.y >= sprite.targetY) {\n          sprites.splice(i, 1);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.fillStyle = \"rgba(110, 197, 230, 1)\";\n      this.ctx.fillRect(0, 0, this.globals.can.width, this.globals.can.height);\n      this.drawClouds();\n      this.drawSprites();\n      this.config.scaleTitle = (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"PARACHUTE\", this.globals.assets.imgFont, 0, this.globals.can.height / 6, this.globals.can.width, this.globals.can.height * 1.5 / 6, this.config.scaleTitle);\n      (0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.drawTitle)(this.ctx, \"ANIMALS\", this.globals.assets.imgFont, 0, this.globals.can.height * 1.5 / 6, this.globals.can.width, this.globals.can.height / 3, this.config.scaleTitle);\n      playButton.scale = this.config.scaleTitle;\n      playButton.draw(this.ctx);\n    }\n  }, {\n    key: \"drawSprites\",\n    value: function drawSprites() {\n      for (var i = 0; i < sprites.length; i++) {\n        var sprite = sprites[i];\n        this.ctx.imageSmoothingEnabled = false;\n        var x = Math.floor(sprite.x + (this.globals.config.csW - this.scaleImage) / 2);\n        var y = Math.floor(sprite.y + (this.globals.config.csH - this.scaleImage) / 2);\n\n        if (sprite.status === \"NEW\") {\n          this.ctx.imageSmoothingEnabled = false;\n          var _img = this.globals.assets.imgUmbrella;\n          this.ctx.drawImage(_img, 0, 0, _img.width, _img.height, x, Math.floor(y - this.scaleImage * 0.4), this.scaleImage, this.scaleImage);\n        }\n\n        var quad = sprite.quads[sprite.frameIndex];\n        var img = this.globals.assets.imgAnimals[sprite.id];\n        this.ctx.drawImage(img, quad.x, quad.y, quad.w, quad.h, x, y, this.scaleImage, this.scaleImage);\n      }\n    }\n  }, {\n    key: \"drawClouds\",\n    value: function drawClouds() {\n      for (var i = 0; i < clouds.length; i++) {\n        var cloud = clouds[i];\n        var quad = cloudQuads[cloud.id];\n        this.ctx.drawImage(this.globals.assets.imgClouds, quad.x, quad.y, quad.w, quad.h, cloud.x, cloud.y, cloud.w * this.scaleImage / 16, cloud.h * this.scaleImage / 16);\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var rect = this.globals.can.getBoundingClientRect();\n      var x = this.globals.mouse.x - rect.left;\n      var y = this.globals.mouse.y - rect.top;\n\n      if ((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.isInButton)(x, y, playButton)) {\n        this.globals.mouse.etatOn = false;\n        var fade = new _fadeStart__WEBPACK_IMPORTED_MODULE_2__.FadeStart(this.globals);\n        (0,_main__WEBPACK_IMPORTED_MODULE_1__.enter)(fade);\n      }\n    }\n  }]);\n\n  return Menu;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/menu.js?");

/***/ }),

/***/ "./src/main/stop.js":
/*!**************************!*\
  !*** ./src/main/stop.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Stop\": () => (/* binding */ Stop)\n/* harmony export */ });\n/* harmony import */ var _core_tool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/tool */ \"./src/core/tool.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar playButton;\nvar Stop = /*#__PURE__*/function () {\n  function Stop(globals) {\n    _classCallCheck(this, Stop);\n\n    _defineProperty(this, \"drawPlay\", function (ctx, img, startX, startY, endX, endY, scale) {\n      var x = (startX + endX) / 2 - img.width * scale / 2;\n      var y = (startY + endY) / 2 - img.height * scale / 2;\n      ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\n    });\n\n    this.globals = globals;\n    this.name = \"stop\";\n    this.ctx = globals.can.getContext(\"2d\");\n    this.scaleTitle = globals.config.scaleTitle;\n  }\n\n  _createClass(Stop, [{\n    key: \"init\",\n    value: function init() {\n      this.globals.assets.bgMusic.pause();\n      var img = this.globals.assets.imgPlay;\n      var scalePlay = Math.floor(5 * this.scaleTitle);\n      var x = this.globals.can.width / 2 - img.width * scalePlay / 2;\n      var y = this.globals.can.height / 2 - img.height * scalePlay / 2;\n      playButton = new _core_tool__WEBPACK_IMPORTED_MODULE_0__.ImgButton(img, x, y, scalePlay);\n    }\n  }, {\n    key: \"update\",\n    value: function update(dt) {\n      if (this.globals.mouse.etatOn) {\n        var rect = this.globals.can.getBoundingClientRect();\n        var x = this.globals.mouse.x - rect.left;\n        var y = this.globals.mouse.y - rect.top;\n\n        if ((0,_core_tool__WEBPACK_IMPORTED_MODULE_0__.isInButton)(x, y, playButton)) {\n          this.globals.mouse.etatOn = false;\n          this.globals.scenes.pop(); //this.globals.scenes.splice(this.globals.scenes.length - 1, 1);\n\n          this.globals.assets.bgMusic.play();\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      this.ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\n      this.ctx.fillRect(0, 0, this.globals.can.width, this.globals.can.height);\n      playButton.draw(this.ctx); //this.drawPlay(this.ctx, this.globals.assets.imgPlay, 0, 0, this.globals.can.width, this.globals.can.height, 10); \n    }\n  }]);\n\n  return Stop;\n}();\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/main/stop.js?");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://io.gswcott.parachuteanimals/./src/index.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;